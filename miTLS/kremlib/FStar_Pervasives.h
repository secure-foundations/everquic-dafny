/*
  Copyright (c) INRIA and Microsoft Corporation. All rights reserved.
  Licensed under the Apache 2.0 License.

  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: ../krml -fparentheses -fcurly-braces -fno-shadow -header copyright-header.txt -minimal -tmpdir dist/generic -warn-error +9+11 -skip-compilation -extract-uints -add-include <inttypes.h> -add-include "kremlib.h" -add-include "kremlin/internal/compat.h" -add-include "kremlin/internal/target.h" -bundle FStar.UInt64+FStar.UInt32+FStar.UInt16+FStar.UInt8=[rename=FStar_UInt_8_16_32_64] -bundle C.Endianness= -bundle FStar.Reflection,FStar.Reflection.*,FStar.Tactics,FStar.Tactics.*,FStar.Range -library C,C.Endianness,C.Failure,C.Loops,FStar.BitVector,FStar.Bytes,FStar.Char,FStar.Int,FStar.Kremlin.Endianness,FStar.Math.Lib,FStar.ModifiesGen,FStar.Monotonic.Heap,FStar.Monotonic.HyperStack,FStar.Mul,FStar.Pervasives,FStar.Pervasives.Native,FStar.ST,FStar.UInt,FStar.UInt128,FStar.UInt63,LowStar.Printf fstar_int8.c fstar_hyperstack_io.c prims.c c_string.c fstar_char.c fstar_date.c fstar_int64.c fstar_uint8.c fstar_int32.c c.c testlib.c fstar_uint32.c fstar_uint64.c fstar_bytes.c fstar_int16.c lowstar_printf.c fstar_io.c fstar_string.c fstar_dyn.c fstar_uint128.c fstar_uint16.c -o libkremlib.a .extract/prims.krml .extract/FStar_Pervasives_Native.krml .extract/FStar_Pervasives.krml .extract/FStar_Reflection_Types.krml .extract/FStar_Reflection_Data.krml .extract/FStar_Order.krml .extract/FStar_Reflection_Basic.krml .extract/FStar_Preorder.krml .extract/FStar_Calc.krml .extract/FStar_Squash.krml .extract/FStar_Classical.krml .extract/FStar_StrongExcludedMiddle.krml .extract/FStar_FunctionalExtensionality.krml .extract/FStar_List_Tot_Base.krml .extract/FStar_List_Tot_Properties.krml .extract/FStar_List_Tot.krml .extract/FStar_Seq_Base.krml .extract/FStar_Seq_Properties.krml .extract/FStar_Seq.krml .extract/FStar_Mul.krml .extract/FStar_Math_Lib.krml .extract/FStar_Math_Lemmas.krml .extract/FStar_BitVector.krml .extract/FStar_UInt.krml .extract/FStar_UInt32.krml .extract/FStar_Int.krml .extract/FStar_Int16.krml .extract/FStar_Ghost.krml .extract/FStar_ErasedLogic.krml .extract/FStar_UInt64.krml .extract/FStar_Set.krml .extract/FStar_PropositionalExtensionality.krml .extract/FStar_PredicateExtensionality.krml .extract/FStar_TSet.krml .extract/FStar_Monotonic_Heap.krml .extract/FStar_Heap.krml .extract/FStar_Map.krml .extract/FStar_Monotonic_HyperHeap.krml .extract/FStar_Monotonic_HyperStack.krml .extract/FStar_HyperStack.krml .extract/FStar_Monotonic_Witnessed.krml .extract/FStar_HyperStack_ST.krml .extract/FStar_HyperStack_All.krml .extract/FStar_Date.krml .extract/FStar_Char.krml .extract/FStar_Exn.krml .extract/FStar_ST.krml .extract/FStar_All.krml .extract/FStar_List.krml .extract/FStar_String.krml .extract/FStar_Reflection_Const.krml .extract/FStar_Reflection_Derived.krml .extract/FStar_Reflection_Derived_Lemmas.krml .extract/FStar_Universe.krml .extract/FStar_GSet.krml .extract/FStar_ModifiesGen.krml .extract/FStar_Range.krml .extract/FStar_Tactics_Types.krml .extract/FStar_Tactics_Result.krml .extract/FStar_Tactics_Effect.krml .extract/FStar_Tactics_Util.krml .extract/FStar_Tactics_Builtins.krml .extract/FStar_Reflection_Formula.krml .extract/FStar_Reflection.krml .extract/FStar_Tactics_Derived.krml .extract/FStar_Tactics_Logic.krml .extract/FStar_Tactics.krml .extract/FStar_BigOps.krml .extract/LowStar_Monotonic_Buffer.krml .extract/LowStar_Buffer.krml .extract/Spec_Loops.krml .extract/LowStar_BufferOps.krml .extract/C_Loops.krml .extract/FStar_UInt8.krml .extract/FStar_Kremlin_Endianness.krml .extract/FStar_UInt63.krml .extract/FStar_Dyn.krml .extract/FStar_Int63.krml .extract/FStar_Int64.krml .extract/FStar_Int32.krml .extract/FStar_Int8.krml .extract/FStar_UInt16.krml .extract/FStar_Int_Cast.krml .extract/FStar_UInt128.krml .extract/C_Endianness.krml .extract/WasmSupport.krml .extract/FStar_Float.krml .extract/FStar_IO.krml .extract/C.krml .extract/LowStar_Modifies.krml .extract/C_String.krml .extract/FStar_Bytes.krml .extract/FStar_HyperStack_IO.krml .extract/LowStar_Printf.krml .extract/C_Failure.krml .extract/TestLib.krml .extract/FStar_Int_Cast_Full.krml
  F* version: 946ec3ee
  KreMLin version: 88253438
*/

#include <inttypes.h>
#include "kremlib.h"
#include "kremlin/internal/compat.h"
#include "kremlin/internal/target.h"

#ifndef __FStar_Pervasives_H
#define __FStar_Pervasives_H

#include "FStar_String.h"
#include "FStar_BitVector.h"


typedef void *FStar_Pervasives_ex_pre;

#define FStar_Pervasives_PpxDerivingShow 0
#define FStar_Pervasives_PpxDerivingShowConstant 1
#define FStar_Pervasives_PpxDerivingYoJson 2
#define FStar_Pervasives_CInline 3
#define FStar_Pervasives_Substitute 4
#define FStar_Pervasives_Gc 5
#define FStar_Pervasives_Comment 6
#define FStar_Pervasives_CPrologue 7
#define FStar_Pervasives_CEpilogue 8
#define FStar_Pervasives_CConst 9
#define FStar_Pervasives_CCConv 10
#define FStar_Pervasives_CAbstractStruct 11
#define FStar_Pervasives_CIfDef 12
#define FStar_Pervasives_CMacro 13

typedef uint8_t FStar_Pervasives___internal_ocaml_attributes_tags;

typedef struct FStar_Pervasives___internal_ocaml_attributes_s
{
  FStar_Pervasives___internal_ocaml_attributes_tags tag;
  union {
    Prims_string case_PpxDerivingShowConstant;
    Prims_string case_Comment;
    Prims_string case_CPrologue;
    Prims_string case_CEpilogue;
    Prims_string case_CConst;
    Prims_string case_CCConv;
  }
  ;
}
FStar_Pervasives___internal_ocaml_attributes;

extern bool
FStar_Pervasives_uu___is_PpxDerivingShow(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_PpxDerivingShowConstant(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern Prims_string
FStar_Pervasives___proj__PpxDerivingShowConstant__item___0(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_PpxDerivingYoJson(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_CInline(FStar_Pervasives___internal_ocaml_attributes projectee);

extern bool
FStar_Pervasives_uu___is_Substitute(FStar_Pervasives___internal_ocaml_attributes projectee);

extern bool
FStar_Pervasives_uu___is_Gc(FStar_Pervasives___internal_ocaml_attributes projectee);

extern bool
FStar_Pervasives_uu___is_Comment(FStar_Pervasives___internal_ocaml_attributes projectee);

extern Prims_string
FStar_Pervasives___proj__Comment__item___0(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_CPrologue(FStar_Pervasives___internal_ocaml_attributes projectee);

extern Prims_string
FStar_Pervasives___proj__CPrologue__item___0(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_CEpilogue(FStar_Pervasives___internal_ocaml_attributes projectee);

extern Prims_string
FStar_Pervasives___proj__CEpilogue__item___0(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_CConst(FStar_Pervasives___internal_ocaml_attributes projectee);

extern Prims_string
FStar_Pervasives___proj__CConst__item___0(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_CCConv(FStar_Pervasives___internal_ocaml_attributes projectee);

extern Prims_string
FStar_Pervasives___proj__CCConv__item___0(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_CAbstractStruct(
  FStar_Pervasives___internal_ocaml_attributes projectee
);

extern bool
FStar_Pervasives_uu___is_CIfDef(FStar_Pervasives___internal_ocaml_attributes projectee);

extern bool
FStar_Pervasives_uu___is_CMacro(FStar_Pervasives___internal_ocaml_attributes projectee);

#define FStar_Pervasives_Simpl 0
#define FStar_Pervasives_Weak 1
#define FStar_Pervasives_HNF 2
#define FStar_Pervasives_Primops 3
#define FStar_Pervasives_Delta 4
#define FStar_Pervasives_Zeta 5
#define FStar_Pervasives_Iota 6
#define FStar_Pervasives_NBE 7
#define FStar_Pervasives_Reify 8
#define FStar_Pervasives_UnfoldOnly 9
#define FStar_Pervasives_UnfoldFully 10
#define FStar_Pervasives_UnfoldAttr 11

typedef uint8_t FStar_Pervasives_norm_step_tags;

typedef struct FStar_Pervasives_norm_step_s
{
  FStar_Pervasives_norm_step_tags tag;
  union {
    Prims_list__Prims_string *case_UnfoldOnly;
    Prims_list__Prims_string *case_UnfoldFully;
    Prims_list__Prims_string *case_UnfoldAttr;
  }
  ;
}
FStar_Pervasives_norm_step;

extern FStar_Pervasives_norm_step FStar_Pervasives_simplify;

extern FStar_Pervasives_norm_step FStar_Pervasives_weak;

extern FStar_Pervasives_norm_step FStar_Pervasives_hnf;

extern FStar_Pervasives_norm_step FStar_Pervasives_primops;

extern FStar_Pervasives_norm_step FStar_Pervasives_delta;

extern FStar_Pervasives_norm_step FStar_Pervasives_zeta;

extern FStar_Pervasives_norm_step FStar_Pervasives_iota;

extern FStar_Pervasives_norm_step FStar_Pervasives_nbe;

extern FStar_Pervasives_norm_step FStar_Pervasives_reify_;

extern FStar_Pervasives_norm_step FStar_Pervasives_delta_only(Prims_list__Prims_string *s);

extern FStar_Pervasives_norm_step FStar_Pervasives_delta_fully(Prims_list__Prims_string *s);

extern FStar_Pervasives_norm_step FStar_Pervasives_delta_attr(Prims_list__Prims_string *s);

typedef struct Prims_list__FStar_Pervasives_norm_step_s Prims_list__FStar_Pervasives_norm_step;

typedef struct Prims_list__FStar_Pervasives_norm_step_s
{
  Prims_list__bool_tags tag;
  FStar_Pervasives_norm_step hd;
  Prims_list__FStar_Pervasives_norm_step *tl;
}
Prims_list__FStar_Pervasives_norm_step;

extern void *FStar_Pervasives_norm(Prims_list__FStar_Pervasives_norm_step *s, void *a);

#define __FStar_Pervasives_H_DEFINED
#endif
