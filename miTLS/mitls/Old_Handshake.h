/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: D:\everest\kremlin\_build\src\Kremlin.native -minimal -add-include "kremlib.h" -fnoanonymous-unions -warn-error -9-7-6@4-14-15 -fsopts --debug,yes -verbose -library EverCrypt,EverCrypt.*,Hacl.*,Interop_assumptions,Check_sha_stdcall,Sha_update_bytes_stdcall,Check_aesni_stdcall -drop MonotoneMap -drop MonotoneMapNonDep -drop FStar.Tactics.\* -drop FStar.Tactics -drop Crypto.AEAD.\* -drop Crypto.HKDF -drop Crypto.HMAC -add-include "hacks.h" -add-include "kremlin/internal/compat.h" -bundle LowParse.\*,LowParseWrappers[rename=LowParse] -bundle Format.\* -bundle EverCrypt=EverCrypt,EverCrypt.\* -bundle FStar.\*,LowStar.\*,C,C.\*[rename=Mitls_Kremlib] -bundle Parsers.\* -bundle Spec.\* -bundle Meta.\* -bundle Lib.*[rename=Hacl_Lib] -bundle Hacl.\* -bundle KDF.\*,KDF,Idx,IV,Pkg,Pkg.\*[rename=Pkg] -bundle TLSConstants=TLSConstants,QD.TLS_protocolVersion,List.Helpers -bundle Hashing=Hashing.Spec,Hashing,Hashing.CRF,HMAC,HKDF,HMAC.UFCMA -bundle Old.Handshake=Old.HMAC.UFCMA,Old.Epochs,Old.KeySchedule,Old.Handshake -bundle StatefulLHAE=AEAD_GCM,LHAEPlain,StatefulPlain,StatefulLHAE -bundle StreamAE=StreamPlain,StreamAE -bundle CommonDH=TLS.Curve25519,DHGroup,ECGroup,CommonDH -bundle Content=Content,DataStream -bundle Record=Record,StAE,Transport,StreamDeltas -bundle PMS=PMS,RSAKey,TLSPRF -bundle Crypto.Plain=Buffer.Utils,Crypto.Indexing,Crypto.Plain,Crypto.Symmetric.Bytes -bundle Flags=DebugFlags,Flags,Flag,TLSInfoFlags -bundle Vale.Stdcalls.*,Vale.Interop,Vale.Interop.*,Vale.Wrapper.X64.*[rename=Vale] -bundle Vale.Inline.X64.*[rename=Vale_Inline] -bundle Vale.*[rename=Unused2] -ldopts -L,D:/everest/MLCrypto/openssl,-lcrypto,-lssl extract/Kremlin/FStar_Pervasives_Native.krml extract/Kremlin/FStar_Pervasives.krml extract/Kremlin/FStar_Squash.krml extract/Kremlin/FStar_Classical.krml extract/Kremlin/FStar_Preorder.krml extract/Kremlin/FStar_Calc.krml extract/Kremlin/FStar_Mul.krml extract/Kremlin/FStar_Math_Lib.krml extract/Kremlin/FStar_Math_Lemmas.krml extract/Kremlin/FStar_StrongExcludedMiddle.krml extract/Kremlin/FStar_FunctionalExtensionality.krml extract/Kremlin/FStar_List_Tot_Base.krml extract/Kremlin/FStar_List_Tot_Properties.krml extract/Kremlin/FStar_List_Tot.krml extract/Kremlin/FStar_Seq_Base.krml extract/Kremlin/FStar_Seq_Properties.krml extract/Kremlin/FStar_Seq.krml extract/Kremlin/FStar_BitVector.krml extract/Kremlin/FStar_UInt.krml extract/Kremlin/FStar_UInt32.krml extract/Kremlin/FStar_UInt8.krml extract/Kremlin/FStar_Exn.krml extract/Kremlin/FStar_Set.krml extract/Kremlin/FStar_Monotonic_Witnessed.krml extract/Kremlin/FStar_Ghost.krml extract/Kremlin/FStar_ErasedLogic.krml extract/Kremlin/FStar_PropositionalExtensionality.krml extract/Kremlin/FStar_PredicateExtensionality.krml extract/Kremlin/FStar_TSet.krml extract/Kremlin/FStar_Monotonic_Heap.krml extract/Kremlin/FStar_Heap.krml extract/Kremlin/FStar_ST.krml extract/Kremlin/FStar_All.krml extract/Kremlin/Lib_LoopCombinators.krml extract/Kremlin/FStar_Int.krml extract/Kremlin/FStar_Int64.krml extract/Kremlin/FStar_Int63.krml extract/Kremlin/FStar_Int32.krml extract/Kremlin/FStar_Int16.krml extract/Kremlin/FStar_Int8.krml extract/Kremlin/FStar_UInt64.krml extract/Kremlin/FStar_UInt63.krml extract/Kremlin/FStar_UInt16.krml extract/Kremlin/FStar_Int_Cast.krml extract/Kremlin/FStar_UInt128.krml extract/Kremlin/FStar_Int_Cast_Full.krml extract/Kremlin/FStar_Int128.krml extract/Kremlin/Lib_IntTypes.krml extract/Kremlin/Lib_RawIntTypes.krml extract/Kremlin/Lib_Sequence.krml extract/Kremlin/Lib_ByteSequence.krml extract/Kremlin/Spec_Chacha20.krml extract/Kremlin/Meta_Attribute.krml extract/Kremlin/FStar_Map.krml extract/Kremlin/FStar_Monotonic_HyperHeap.krml extract/Kremlin/FStar_Monotonic_HyperStack.krml extract/Kremlin/FStar_HyperStack.krml extract/Kremlin/FStar_HyperStack_ST.krml extract/Kremlin/FStar_Universe.krml extract/Kremlin/FStar_GSet.krml extract/Kremlin/FStar_ModifiesGen.krml extract/Kremlin/FStar_Range.krml extract/Kremlin/FStar_Reflection_Types.krml extract/Kremlin/FStar_Tactics_Types.krml extract/Kremlin/FStar_Tactics_Result.krml extract/Kremlin/FStar_Tactics_Effect.krml extract/Kremlin/FStar_Reflection_Data.krml extract/Kremlin/FStar_Tactics_Builtins.krml extract/Kremlin/FStar_Reflection_Const.krml extract/Kremlin/FStar_Char.krml extract/Kremlin/FStar_List.krml extract/Kremlin/FStar_String.krml extract/Kremlin/FStar_Order.krml extract/Kremlin/FStar_Reflection_Basic.krml extract/Kremlin/FStar_Reflection_Derived.krml extract/Kremlin/FStar_Reflection_Derived_Lemmas.krml extract/Kremlin/FStar_Reflection.krml extract/Kremlin/FStar_Tactics_SyntaxHelpers.krml extract/Kremlin/FStar_Tactics_Util.krml extract/Kremlin/FStar_Reflection_Formula.krml extract/Kremlin/FStar_Tactics_Derived.krml extract/Kremlin/FStar_Tactics_Logic.krml extract/Kremlin/FStar_Tactics.krml extract/Kremlin/FStar_BigOps.krml extract/Kremlin/LowStar_Monotonic_Buffer.krml extract/Kremlin/LowStar_Buffer.krml extract/Kremlin/LowStar_BufferOps.krml extract/Kremlin/Spec_Loops.krml extract/Kremlin/C_Loops.krml extract/Kremlin/Lib_Loops.krml extract/Kremlin/FStar_Endianness.krml extract/Kremlin/LowStar_Endianness.krml extract/Kremlin/LowStar_ImmutableBuffer.krml extract/Kremlin/Lib_Buffer.krml extract/Kremlin/Lib_ByteBuffer.krml extract/Kremlin/FStar_HyperStack_All.krml extract/Kremlin/Lib_IntVector_Intrinsics.krml extract/Kremlin/Spec_GaloisField.krml extract/Kremlin/Spec_AES.krml extract/Kremlin/Lib_IntVector.krml extract/Kremlin/Hacl_Spec_Chacha20_Vec.krml extract/Kremlin/Hacl_Spec_Chacha20_Lemmas.krml extract/Kremlin/Lib_Sequence_Lemmas.krml extract/Kremlin/Hacl_Spec_Chacha20_Equiv.krml extract/Kremlin/Hacl_Impl_Chacha20_Core32xN.krml extract/Kremlin/Hacl_Impl_Chacha20_Vec.krml extract/Kremlin/Vale_Lib_Seqs_s.krml extract/Kremlin/Vale_Def_Words_s.krml extract/Kremlin/Vale_Def_Words_Four_s.krml extract/Kremlin/Vale_Def_Words_Two_s.krml extract/Kremlin/Vale_Def_Words_Seq_s.krml extract/Kremlin/Vale_Def_Opaque_s.krml extract/Kremlin/Vale_Def_Types_s.krml extract/Kremlin/Vale_X64_Machine_s.krml extract/Kremlin/Vale_Lib_Map16.krml extract/Kremlin/Vale_Def_Prop_s.krml extract/Kremlin/Vale_X64_Flags.krml extract/Kremlin/Vale_X64_CPU_Features_s.krml extract/Kremlin/Vale_Curve25519_Fast_lemmas_internal.krml extract/Kremlin/Vale_Lib_Meta.krml extract/Kremlin/Vale_Def_Words_Two.krml extract/Kremlin/Vale_Lib_Seqs.krml extract/Kremlin/Vale_Def_TypesNative_s.krml extract/Kremlin/Vale_Arch_TypesNative.krml extract/Kremlin/Vale_Def_Words_Seq.krml extract/Kremlin/Vale_Arch_Types.krml extract/Kremlin/Vale_Curve25519_Fast_defs.krml extract/Kremlin/FStar_Algebra_CommMonoid.krml extract/Kremlin/FStar_Tactics_CanonCommSemiring.krml extract/Kremlin/Vale_Curve25519_FastUtil_helpers.krml extract/Kremlin/Vale_Curve25519_FastHybrid_helpers.krml extract/Kremlin/Vale_Curve25519_Fast_lemmas_external.krml extract/Kremlin/Vale_X64_Regs.krml extract/Kremlin/FStar_Float.krml extract/Kremlin/FStar_IO.krml extract/Kremlin/Vale_Def_PossiblyMonad.krml extract/Kremlin/LowStar_BufferView_Down.krml extract/Kremlin/LowStar_BufferView_Up.krml extract/Kremlin/Vale_Interop_Views.krml extract/Kremlin/FStar_Option.krml extract/Kremlin/Vale_Lib_Set.krml extract/Kremlin/Vale_X64_Instruction_s.krml extract/Kremlin/Vale_X64_Bytes_Code_s.krml extract/Kremlin/Vale_AES_AES_s.krml extract/Kremlin/Vale_Math_Poly2_Defs_s.krml extract/Kremlin/Vale_Math_Poly2_s.krml extract/Kremlin/Vale_Math_Poly2_Bits_s.krml extract/Kremlin/Spec_Hash_Definitions.krml extract/Kremlin/Spec_Hash_Lemmas0.krml extract/Kremlin/Spec_Hash_PadFinish.krml extract/Kremlin/Spec_SHA2_Constants.krml extract/Kremlin/Spec_SHA2.krml extract/Kremlin/Vale_X64_CryptoInstructions_s.krml extract/Kremlin/Vale_X64_Instructions_s.krml extract/Kremlin/Vale_Arch_HeapTypes_s.krml extract/Kremlin/Vale_Interop_Types.krml extract/Kremlin/Vale_Arch_MachineHeap_s.krml extract/Kremlin/Vale_Interop_Heap_s.krml extract/Kremlin/LowStar_Modifies.krml extract/Kremlin/LowStar_ModifiesPat.krml extract/Kremlin/LowStar_BufferView.krml extract/Kremlin/Vale_Lib_BufferViewHelpers.krml extract/Kremlin/Vale_Interop.krml extract/Kremlin/Vale_Arch_HeapImpl.krml extract/Kremlin/Vale_Arch_Heap.krml extract/Kremlin/Vale_X64_Machine_Semantics_s.krml extract/Kremlin/Vale_Interop_Base.krml extract/Kremlin/Vale_X64_Memory.krml extract/Kremlin/Vale_Arch_MachineHeap.krml extract/Kremlin/Vale_X64_Stack_i.krml extract/Kremlin/Vale_X64_Stack_Sems.krml extract/Kremlin/Vale_X64_BufferViewStore.krml extract/Kremlin/Vale_X64_Memory_Sems.krml extract/Kremlin/Vale_X64_State.krml extract/Kremlin/Vale_X64_StateLemmas.krml extract/Kremlin/Vale_X64_Lemmas.krml extract/Kremlin/Vale_X64_Print_s.krml extract/Kremlin/Vale_X64_Decls.krml extract/Kremlin/Vale_X64_QuickCode.krml extract/Kremlin/Vale_X64_QuickCodes.krml extract/Kremlin/Vale_X64_Taint_Semantics.krml extract/Kremlin/Vale_X64_InsLemmas.krml extract/Kremlin/Vale_X64_InsBasic.krml extract/Kremlin/Vale_X64_InsMem.krml extract/Kremlin/Vale_X64_InsVector.krml extract/Kremlin/Vale_X64_InsStack.krml extract/Kremlin/Vale_Curve25519_X64_FastHybrid.krml extract/Kremlin/Vale_Bignum_Defs.krml extract/Kremlin/Vale_Bignum_X64.krml extract/Kremlin/Vale_Curve25519_FastSqr_helpers.krml extract/Kremlin/Vale_Curve25519_X64_FastSqr.krml extract/Kremlin/Vale_Curve25519_FastMul_helpers.krml extract/Kremlin/Vale_Curve25519_X64_FastMul.krml extract/Kremlin/Vale_Curve25519_X64_FastWide.krml extract/Kremlin/Vale_Curve25519_X64_FastUtil.krml extract/Kremlin/Vale_X64_MemoryAdapters.krml extract/Kremlin/Vale_Interop_Assumptions.krml extract/Kremlin/Vale_Interop_X64.krml extract/Kremlin/Vale_AsLowStar_ValeSig.krml extract/Kremlin/Vale_AsLowStar_LowStarSig.krml extract/Kremlin/Vale_AsLowStar_MemoryHelpers.krml extract/Kremlin/Vale_AsLowStar_Wrapper.krml extract/Kremlin/Vale_Stdcalls_X64_Fadd.krml extract/Kremlin/Vale_Wrapper_X64_Fadd.krml extract/Kremlin/Spec_SHA1.krml extract/Kremlin/Spec_MD5.krml extract/Kremlin/Spec_Agile_Hash.krml extract/Kremlin/Spec_Hash_Incremental.krml extract/Kremlin/Spec_Hash_Lemmas.krml extract/Kremlin/FStar_Kremlin_Endianness.krml extract/Kremlin/Hacl_Hash_Lemmas.krml extract/Kremlin/Hacl_Hash_Definitions.krml extract/Kremlin/Hacl_Hash_PadFinish.krml extract/Kremlin/Hacl_Hash_MD.krml extract/Kremlin/Spec_SHA2_Lemmas.krml extract/Kremlin/Vale_X64_Stack.krml extract/Kremlin/Vale_SHA_SHA_helpers.krml extract/Kremlin/Vale_X64_InsSha.krml extract/Kremlin/Vale_SHA_X64.krml extract/Kremlin/Vale_Stdcalls_X64_Sha.krml extract/Kremlin/FStar_BV.krml extract/Kremlin/FStar_Reflection_Arith.krml extract/Kremlin/FStar_Tactics_BV.krml extract/Kremlin/Vale_Lib_Bv_s.krml extract/Kremlin/Vale_Math_Bits.krml extract/Kremlin/Vale_Lib_Tactics.krml extract/Kremlin/Vale_Poly1305_Bitvectors.krml extract/Kremlin/Vale_Math_Lemmas_Int.krml extract/Kremlin/FStar_Tactics_Canon.krml extract/Kremlin/Vale_Poly1305_Spec_s.krml extract/Kremlin/Vale_Poly1305_Math.krml extract/Kremlin/Vale_Poly1305_Util.krml extract/Kremlin/Vale_Poly1305_X64.krml extract/Kremlin/Vale_Stdcalls_X64_Poly.krml extract/Kremlin/Vale_Wrapper_X64_Poly.krml extract/Kremlin/Vale_Arch_BufferFriend.krml extract/Kremlin/Vale_SHA_Simplify_Sha.krml extract/Kremlin/Vale_Wrapper_X64_Sha.krml extract/Kremlin/Hacl_Hash_Core_SHA2_Constants.krml extract/Kremlin/Hacl_Hash_Core_SHA2.krml extract/Kremlin/Hacl_Hash_SHA2.krml extract/Kremlin/Hacl_Hash_Core_SHA1.krml extract/Kremlin/Hacl_Hash_SHA1.krml extract/Kremlin/Hacl_Hash_Core_MD5.krml extract/Kremlin/Hacl_Hash_MD5.krml extract/Kremlin/C.krml extract/Kremlin/C_String.krml extract/Kremlin/C_Failure.krml extract/Kremlin/FStar_Int31.krml extract/Kremlin/FStar_UInt31.krml extract/Kremlin/FStar_Integers.krml extract/Kremlin/EverCrypt_StaticConfig.krml extract/Kremlin/EverCrypt_TargetConfig.krml extract/Kremlin/Vale_Lib_Basic.krml extract/Kremlin/Vale_Lib_X64_Cpuid.krml extract/Kremlin/Vale_Lib_X64_Cpuidstdcall.krml extract/Kremlin/Vale_Stdcalls_X64_Cpuid.krml extract/Kremlin/Vale_Wrapper_X64_Cpuid.krml extract/Kremlin/EverCrypt_AutoConfig2.krml extract/Kremlin/EverCrypt_Helpers.krml extract/Kremlin/EverCrypt_Hash.krml extract/Kremlin/Spec_Agile_HMAC.krml extract/Kremlin/Hacl_HMAC.krml extract/Kremlin/EverCrypt_HMAC.krml extract/Kremlin/Declassify.krml extract/Kremlin/FStar_Bytes.krml extract/Kremlin/Hashing_Spec.krml extract/Kremlin/LowParse_Bytes32.krml extract/Kremlin/LowParse_Bytes.krml extract/Kremlin/LowParse_Spec_Base.krml extract/Kremlin/LowParse_SLow_Base.krml extract/Kremlin/LowParse_Spec_Option.krml extract/Kremlin/LowParse_SLow_Option.krml extract/Kremlin/LowParse_Spec_Combinators.krml extract/Kremlin/LowParse_Spec_IfThenElse.krml extract/Kremlin/LowParse_SLow_Combinators.krml extract/Kremlin/LowParse_Spec_List.krml extract/Kremlin/LowParse_SLow_List.krml extract/Kremlin/Spec_Curve25519_Lemmas.krml extract/Kremlin/Spec_Curve25519.krml extract/Kremlin/Hacl_Spec_Curve25519_AddAndDouble.krml extract/Kremlin/Hacl_Impl_Curve25519_Lemmas.krml extract/Kremlin/Hacl_Spec_Curve25519_Field64_Definition.krml extract/Kremlin/Hacl_Spec_Curve25519_Field64_Lemmas.krml extract/Kremlin/Hacl_Spec_Curve25519_Field64_Core.krml extract/Kremlin/Hacl_Spec_Curve25519_Field64.krml extract/Kremlin/Hacl_Spec_Curve25519_Field51_Definition.krml extract/Kremlin/Hacl_Spec_Curve25519_Field51_Lemmas.krml extract/Kremlin/Hacl_Spec_Curve25519_Field51.krml extract/Kremlin/Hacl_Impl_Curve25519_Fields_Core.krml extract/Kremlin/Hacl_Impl_Curve25519_Field64.krml extract/Kremlin/Hacl_Impl_Curve25519_Field51.krml extract/Kremlin/Hacl_Impl_Curve25519_Fields.krml extract/Kremlin/Hacl_Impl_Curve25519_AddAndDouble.krml extract/Kremlin/Spec_Poly1305.krml extract/Kremlin/Hacl_Spec_Poly1305_Vec.krml extract/Kremlin/Hacl_Spec_Poly1305_Field32xN.krml extract/Kremlin/Hacl_Poly1305_Field32xN_Lemmas.krml extract/Kremlin/Hacl_Impl_Poly1305_Lemmas.krml extract/Kremlin/Hacl_Spec_Poly1305_Field32xN_Lemmas.krml extract/Kremlin/Hacl_Impl_Poly1305_Field32xN.krml extract/Kremlin/Hacl_Spec_Poly1305_Lemmas.krml extract/Kremlin/Hacl_Spec_Poly1305_Equiv.krml extract/Kremlin/Hacl_Impl_Poly1305_Field32xN_256.krml extract/Kremlin/Hacl_Impl_Poly1305_Field32xN_128.krml extract/Kremlin/Hacl_Impl_Poly1305_Field32xN_32.krml extract/Kremlin/Hacl_Impl_Poly1305_Fields.krml extract/Kremlin/Hacl_Impl_Poly1305.krml extract/Kremlin/Spec_Chacha20Poly1305.krml extract/Kremlin/Hacl_Impl_Chacha20Poly1305_PolyCore.krml extract/Kremlin/Hacl_Impl_Chacha20Poly1305.krml extract/Kremlin/FStar_List_Pure_Base.krml extract/Kremlin/FStar_List_Pure_Properties.krml extract/Kremlin/FStar_List_Pure.krml extract/Kremlin/Meta_Interface.krml extract/Kremlin/Hacl_Meta_Chacha20Poly1305.krml extract/Kremlin/Hacl_Impl_Chacha20_Core32.krml extract/Kremlin/Hacl_Impl_Chacha20.krml extract/Kremlin/Hacl_Chacha20.krml extract/Kremlin/Hacl_Meta_Poly1305.krml extract/Kremlin/Hacl_Poly1305_32.krml extract/Kremlin/Hacl_Chacha20Poly1305_32.krml extract/Kremlin/FStar_Dyn.krml extract/Kremlin/LowStar_Failure.krml extract/Kremlin/EverCrypt_Vale.krml extract/Kremlin/EverCrypt_Specs.krml extract/Kremlin/EverCrypt_OpenSSL.krml extract/Kremlin/EverCrypt_Hacl.krml extract/Kremlin/EverCrypt_BCrypt.krml extract/Kremlin/EverCrypt_Cipher.krml extract/Kremlin/Hacl_Spec_Curve25519_Finv.krml extract/Kremlin/Hacl_Impl_Curve25519_Finv.krml extract/Kremlin/Hacl_Impl_Curve25519_Generic.krml extract/Kremlin/Hacl_Meta_Curve25519.krml extract/Kremlin/Hacl_Curve25519_51.krml extract/Kremlin/Vale_Stdcalls_X64_Fswap.krml extract/Kremlin/Vale_Wrapper_X64_Fswap.krml extract/Kremlin/Vale_X64_Print_Inline_s.krml extract/Kremlin/Vale_Inline_X64_Fswap_inline.krml extract/Kremlin/Vale_Stdcalls_X64_Fsqr.krml extract/Kremlin/Vale_Wrapper_X64_Fsqr.krml extract/Kremlin/Vale_Inline_X64_Fsqr_inline.krml extract/Kremlin/Vale_Stdcalls_X64_Fmul.krml extract/Kremlin/Vale_Wrapper_X64_Fmul.krml extract/Kremlin/Vale_Inline_X64_Fmul_inline.krml extract/Kremlin/Vale_Stdcalls_X64_Fsub.krml extract/Kremlin/Vale_Wrapper_X64_Fsub.krml extract/Kremlin/Vale_Inline_X64_Fadd_inline.krml extract/Kremlin/Hacl_Impl_Curve25519_Field64_Vale.krml extract/Kremlin/Hacl_Curve25519_64.krml extract/Kremlin/EverCrypt_Curve25519.krml extract/Kremlin/Hacl_Poly1305_128.krml extract/Kremlin/Hacl_Poly1305_256.krml extract/Kremlin/Vale_Poly1305_Equiv.krml extract/Kremlin/Vale_Poly1305_CallingFromLowStar.krml extract/Kremlin/EverCrypt_Poly1305.krml extract/Kremlin/Lib_Memzero.krml extract/Kremlin/Spec_HMAC_DRBG.krml extract/Kremlin/Hacl_HMAC_DRBG.krml extract/Kremlin/Lib_RandomBuffer_System.krml extract/Kremlin/EverCrypt_DRBG.krml extract/Kremlin/Spec_Agile_HKDF.krml extract/Kremlin/Hacl_HKDF.krml extract/Kremlin/EverCrypt_HKDF.krml extract/Kremlin/EverCrypt.krml extract/Kremlin/FStar_Printf.krml extract/Kremlin/FStar_Error.krml extract/Kremlin/FStar_Tcp.krml extract/Kremlin/LowParse_Spec_FLData.krml extract/Kremlin/LowParse_Math.krml extract/Kremlin/LowParse_Slice.krml extract/Kremlin/LowParse_Low_Base.krml extract/Kremlin/LowParse_Low_Combinators.krml extract/Kremlin/LowParse_Low_FLData.krml extract/Kremlin/LowParse_Spec_Seq.krml extract/Kremlin/LowParse_Spec_Int.krml extract/Kremlin/LowParse_Spec_BoundedInt.krml extract/Kremlin/LowParse_Low_Endianness.krml extract/Kremlin/LowParse_BitFields.krml extract/Kremlin/LowParse_Endianness.krml extract/Kremlin/LowParse_Endianness_BitFields.krml extract/Kremlin/LowParse_Low_BoundedInt.krml extract/Kremlin/LowParse_Spec_SeqBytes_Base.krml extract/Kremlin/LowParse_Spec_DER.krml extract/Kremlin/LowParse_Spec_BCVLI.krml extract/Kremlin/LowParse_Spec_AllIntegers.krml extract/Kremlin/LowParse_Spec_VLData.krml extract/Kremlin/LowParse_Low_VLData.krml extract/Kremlin/LowParse_Spec_VLGen.krml extract/Kremlin/LowParse_Low_VLGen.krml extract/Kremlin/LowParse_Low_Int.krml extract/Kremlin/LowParse_Low_DER.krml extract/Kremlin/LowParse_Low_BCVLI.krml extract/Kremlin/LowParse_Low_List.krml extract/Kremlin/LowParse_Spec_Array.krml extract/Kremlin/LowParse_Spec_VCList.krml extract/Kremlin/LowParse_Low_VCList.krml extract/Kremlin/LowParse_Low_IfThenElse.krml extract/Kremlin/LowParse_TacLib.krml extract/Kremlin/LowParse_Spec_Enum.krml extract/Kremlin/LowParse_Spec_Sum.krml extract/Kremlin/LowParse_Low_Enum.krml extract/Kremlin/LowParse_Low_Sum.krml extract/Kremlin/LowParse_Low_Tac_Sum.krml extract/Kremlin/LowParse_Low_Option.krml extract/Kremlin/LowParse_Spec_Bytes.krml extract/Kremlin/LowParse_Low_Bytes.krml extract/Kremlin/LowParse_Low_Array.krml extract/Kremlin/LowParse_Low.krml extract/Kremlin/LowParse_SLow_FLData.krml extract/Kremlin/LowParse_SLow_VLGen.krml extract/Kremlin/LowParse_Spec_Endianness.krml extract/Kremlin/LowParse_Spec_Endianness_Instances.krml extract/Kremlin/LowParse_SLow_Endianness.krml extract/Kremlin/LowParse_SLow_BoundedInt.krml extract/Kremlin/LowParse_SLow_Int.krml extract/Kremlin/LowParse_SLow_DER.krml extract/Kremlin/LowParse_SLow_BCVLI.krml extract/Kremlin/LowParse_SLow_VCList.krml extract/Kremlin/LowParse_SLow_IfThenElse.krml extract/Kremlin/LowParse_SLow_Enum.krml extract/Kremlin/LowParse_SLow_Sum.krml extract/Kremlin/LowParse_SLow_Tac_Enum.krml extract/Kremlin/LowParse_SLow_Tac_Sum.krml extract/Kremlin/LowParse_SLow_VLData.krml extract/Kremlin/LowParse_SLow_Bytes.krml extract/Kremlin/LowParse_SLow_Array.krml extract/Kremlin/LowParse_Spec_Tac_Combinators.krml extract/Kremlin/LowParse_SLow.krml extract/Kremlin/Parsers_AlertDescription.krml extract/Kremlin/Parsers_AlertLevel.krml extract/Kremlin/Parsers_Alert.krml extract/Kremlin/TLSError.krml extract/Kremlin/Parsers_NamedGroup.krml extract/Kremlin/Format_Constants.krml extract/Kremlin/Format_UncompressedPointRepresentation.krml extract/Kremlin/Format_KeyShareEntry.krml extract/Kremlin/Flags.krml extract/Kremlin/Parsers_ECCurveType.krml extract/Kremlin/DebugFlags.krml extract/Kremlin/FStar_DependentMap.krml extract/Kremlin/FStar_Monotonic_DependentMap.krml extract/Kremlin/Mem.krml extract/Kremlin/Random.krml extract/Kremlin/TLS_Curve25519.krml extract/Kremlin/Parse.krml extract/Kremlin/ECGroup.krml extract/Kremlin/DHGroup.krml extract/Kremlin/Parsers_NamedGroupList.krml extract/Kremlin/CommonDH.krml extract/Kremlin/FFICallbacks.krml extract/Kremlin/Parsers_CompressionMethod.krml extract/Kremlin/Parsers_SignatureScheme.krml extract/Kremlin/Parsers_SignatureSchemeList.krml extract/Kremlin/LowParseWrappers.krml extract/Kremlin/Parsers_CipherSuite.krml extract/Kremlin/CipherSuite.krml extract/Kremlin/Parsers_ProtocolVersion.krml extract/Kremlin/TLSConstants.krml extract/Kremlin/HMAC.krml extract/Kremlin/RSAKey.krml extract/Kremlin/PMS.krml extract/Kremlin/List_Helpers.krml extract/Kremlin/PSK.krml extract/Kremlin/Extensions.krml extract/Kremlin/Cert.krml extract/Kremlin/TLSInfoFlags.krml extract/Kremlin/FStar_Date.krml extract/Kremlin/Nonce.krml extract/Kremlin/TLSInfo.krml extract/Kremlin/Crypto_Indexing.krml extract/Kremlin/Flag.krml extract/Kremlin/FStar_Old_Endianness.krml extract/Kremlin/FStar_Buffer.krml extract/Kremlin/C_Compat_Loops.krml extract/Kremlin/Buffer_Utils.krml extract/Kremlin/Crypto_Symmetric_Bytes.krml extract/Kremlin/Crypto_Plain.krml extract/Kremlin/AEADProvider.krml extract/Kremlin/Range.krml extract/Kremlin/DataStream.krml extract/Kremlin/Alert.krml extract/Kremlin/Content.krml extract/Kremlin/StreamPlain.krml extract/Kremlin/Hashing.krml extract/Kremlin/TLSPRF.krml extract/Kremlin/Hashing_CRF.krml extract/Kremlin/HandshakeMessages.krml extract/Kremlin/HandshakeLog.krml extract/Kremlin/Parsers_Boolean.krml extract/Kremlin/Parsers_TicketContents13_custom_data.krml extract/Kremlin/Parsers_TicketContents13_nonce.krml extract/Kremlin/Parsers_TicketContents13_rms.krml extract/Kremlin/Parsers_TicketContents13.krml extract/Kremlin/Parsers_TicketContents12_master_secret.krml extract/Kremlin/Parsers_TicketContents12.krml extract/Kremlin/Parsers_TicketVersion.krml extract/Kremlin/Parsers_TicketContents.krml extract/Kremlin/Parsers_TicketContents12_master_secret_Low.krml extract/Kremlin/Parsers_Ticket_Low.krml extract/Kremlin/Ticket.krml extract/Kremlin/Negotiation.krml extract/Kremlin/FStar_Monotonic_Seq.krml extract/Kremlin/StreamAE.krml extract/Kremlin/StatefulPlain.krml extract/Kremlin/LHAEPlain.krml extract/Kremlin/AEAD_GCM.krml extract/Kremlin/StatefulLHAE.krml extract/Kremlin/StAE.krml extract/Kremlin/Old_HMAC_UFCMA.krml extract/Kremlin/Parsers_HKDF_HkdfLabel_context.krml extract/Kremlin/Parsers_HKDF_HkdfLabel_label.krml extract/Kremlin/Parsers_HKDF_HkdfLabel.krml extract/Kremlin/HKDF.krml extract/Kremlin/Old_KeySchedule.krml extract/Kremlin/Old_Epochs.krml extract/Kremlin/FStar_HyperStack_IO.krml extract/Kremlin/StreamDeltas.krml extract/Kremlin/Old_Handshake.krml extract/Kremlin/Transport.krml extract/Kremlin/BufferBytes.krml extract/Kremlin/Record.krml extract/Kremlin/Connection.krml extract/Kremlin/TLS.krml extract/Kremlin/FFI.krml extract/Kremlin/Pkg.krml extract/Kremlin/Idx.krml extract/Kremlin/Model.krml extract/Kremlin/FStar_Test.krml extract/Kremlin/Pkg_Tree.krml extract/Kremlin/KDF.krml extract/Kremlin/QUIC.krml extract/Kremlin/IV.krml extract/Kremlin/KDF_Rekey.krml -tmpdir extract/Kremlin-Library -skip-compilation
  F* version: 1f9505d5
  KreMLin version: 44acff92
 */
#include "kremlib.h"
#include "hacks.h"
#include "kremlin/internal/compat.h"

#ifndef __Old_Handshake_H
#define __Old_Handshake_H

#include "Parse.h"
#include "Parsers.h"
#include "Spec.h"
#include "HandshakeLog.h"
#include "Nonce.h"
#include "Format.h"
#include "PMS.h"
#include "EverCrypt.h"
#include "Ticket.h"
#include "Mitls_Kremlib.h"
#include "Cert.h"
#include "Negotiation.h"
#include "PSK.h"
#include "Random.h"
#include "CipherSuite.h"
#include "Prims.h"
#include "Extensions.h"
#include "TLSInfo.h"
#include "CommonDH.h"
#include "HandshakeMessages.h"
#include "TLSConstants.h"
#include "Hashing.h"
#include "TLSError.h"
#include "Record.h"
#include "AEADProvider.h"


typedef struct Old_HMAC_UFCMA_entry_s
{
  FStar_Bytes_bytes t;
  FStar_Bytes_bytes p;
}
Old_HMAC_UFCMA_entry;

typedef struct Prims_list__Old_HMAC_UFCMA_entry_s Prims_list__Old_HMAC_UFCMA_entry;

typedef struct Prims_list__Old_HMAC_UFCMA_entry_s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  Old_HMAC_UFCMA_entry hd;
  Prims_list__Old_HMAC_UFCMA_entry *tl;
}
Prims_list__Old_HMAC_UFCMA_entry;

typedef struct Old_HMAC_UFCMA_key_s
{
  FStar_Bytes_bytes kv;
  Prims_list__Old_HMAC_UFCMA_entry **log;
}
Old_HMAC_UFCMA_key;

typedef struct Old_KeySchedule_raw_rekey_secrets_s
{
  EverCrypt_aead_alg rekey_aead;
  Spec_Hash_Definitions_hash_alg rekey_hash;
  FStar_Bytes_bytes rekey_client;
  FStar_Bytes_bytes rekey_server;
}
Old_KeySchedule_raw_rekey_secrets;

typedef struct
K___FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes_FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes_s
{
  FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes fst;
  FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes snd;
}
K___FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes_FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes;

typedef struct
FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes_s
{
  TLSInfo_logInfo _1;
  TLSInfo_pre_exportId *_2;
  FStar_Bytes_bytes _3;
}
FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes;

typedef struct K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg_s
{
  EverCrypt_aead_alg fst;
  Spec_Hash_Definitions_hash_alg snd;
}
K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg;

typedef struct Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes_s
{
  TLSInfo_pre_esId *fst;
  FStar_Bytes_bytes snd;
}
Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes;

typedef struct Prims_list__Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes_s
Prims_list__Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes;

typedef struct Prims_list__Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes_s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes hd;
  Prims_list__Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes *tl;
}
Prims_list__Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes;

typedef struct Prims_list__Prims_dtuple2__CommonDH_group__CommonDH_pre_keyshare__s
Prims_list__Prims_dtuple2__CommonDH_group__CommonDH_pre_keyshare_;

typedef struct Prims_list__Prims_dtuple2__CommonDH_group__CommonDH_pre_keyshare__s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  Prims_dtuple2__CommonDH_group__CommonDH_pre_keyshare_ hd;
  Prims_list__Prims_dtuple2__CommonDH_group__CommonDH_pre_keyshare_ *tl;
}
Prims_list__Prims_dtuple2__CommonDH_group__CommonDH_pre_keyshare_;

typedef struct Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key_s
{
  TLSInfo_pre_finishedId *fst;
  Old_HMAC_UFCMA_key snd;
}
Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key;

typedef struct Prims_dtuple2__TLSInfo_pre_asId_FStar_Bytes_bytes_s
{
  TLSInfo_pre_asId *fst;
  FStar_Bytes_bytes snd;
}
Prims_dtuple2__TLSInfo_pre_asId_FStar_Bytes_bytes;

typedef struct
FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_expandId_K___FStar_Bytes_bytes_FStar_Bytes_bytes_s
{
  TLSInfo_logInfo _1;
  TLSInfo_pre_expandId *_2;
  K___FStar_Bytes_bytes_FStar_Bytes_bytes _3;
}
FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_expandId_K___FStar_Bytes_bytes_FStar_Bytes_bytes;

typedef struct FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_rmsId_FStar_Bytes_bytes_s
{
  TLSInfo_logInfo _1;
  TLSInfo_pre_rmsId *_2;
  FStar_Bytes_bytes _3;
}
FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_rmsId_FStar_Bytes_bytes;

#define Old_KeySchedule_C_Init 0
#define Old_KeySchedule_C_12_Resume_CH 1
#define Old_KeySchedule_C_12_Full_CH 2
#define Old_KeySchedule_C_12_wait_MS 3
#define Old_KeySchedule_C_12_has_MS 4
#define Old_KeySchedule_C_13_wait_SH 5
#define Old_KeySchedule_C_13_wait_SF 6
#define Old_KeySchedule_C_13_wait_CF 7
#define Old_KeySchedule_C_13_postHS 8
#define Old_KeySchedule_C_Done 9

typedef uint8_t Old_KeySchedule_ks_client_state_tags;

typedef struct Old_KeySchedule_ks_client_state_s
{
  Old_KeySchedule_ks_client_state_tags tag;
  union {
    FStar_Bytes_bytes case_C_Init;
    struct 
    {
      FStar_Bytes_bytes cr;
      TLSInfo_sessionInfo si;
      TLSInfo_msId msId;
      FStar_Bytes_bytes ms;
    }
    case_C_12_Resume_CH;
    FStar_Bytes_bytes case_C_12_Full_CH;
    struct 
    {
      FStar_Bytes_bytes csr;
      K___Parsers_ProtocolVersion_protocolVersion_CipherSuite_cipherSuite__bool alpha;
      PMS_pms id;
      FStar_Bytes_bytes pms;
    }
    case_C_12_wait_MS;
    struct 
    {
      FStar_Bytes_bytes csr;
      K___Parsers_ProtocolVersion_protocolVersion_CipherSuite_cipherSuite__bool alpha;
      TLSInfo_msId id;
      FStar_Bytes_bytes ms;
    }
    case_C_12_has_MS;
    struct 
    {
      FStar_Bytes_bytes cr;
      Prims_list__Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes *esl;
      Prims_list__Prims_dtuple2__CommonDH_group__CommonDH_pre_keyshare_ *gs;
    }
    case_C_13_wait_SH;
    struct 
    {
      K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg alpha;
      Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key _1;
      Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key _2;
      Prims_dtuple2__TLSInfo_pre_asId_FStar_Bytes_bytes _3;
    }
    case_C_13_wait_SF;
    struct 
    {
      K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg alpha;
      Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key _1;
      Prims_dtuple2__TLSInfo_pre_asId_FStar_Bytes_bytes _2;
      FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_expandId_K___FStar_Bytes_bytes_FStar_Bytes_bytes
      _3;
    }
    case_C_13_wait_CF;
    struct 
    {
      K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg alpha;
      FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_expandId_K___FStar_Bytes_bytes_FStar_Bytes_bytes
      _1;
      FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_rmsId_FStar_Bytes_bytes _2;
    }
    case_C_13_postHS;
  }
  val;
}
Old_KeySchedule_ks_client_state;

typedef struct Prims_dtuple2__TLSInfo_pre_hsId_FStar_Bytes_bytes_s
{
  TLSInfo_pre_hsId *fst;
  FStar_Bytes_bytes snd;
}
Prims_dtuple2__TLSInfo_pre_hsId_FStar_Bytes_bytes;

#define Old_KeySchedule_S_Init 0
#define Old_KeySchedule_S_12_wait_CKE_DH 1
#define Old_KeySchedule_S_12_wait_CKE_RSA 2
#define Old_KeySchedule_S_12_has_MS 3
#define Old_KeySchedule_S_13_wait_SH 4
#define Old_KeySchedule_S_13_wait_SF 5
#define Old_KeySchedule_S_13_wait_CF 6
#define Old_KeySchedule_S_13_postHS 7
#define Old_KeySchedule_S_Done 8

typedef uint8_t Old_KeySchedule_ks_server_state_tags;

typedef struct Old_KeySchedule_ks_server_state_s
{
  Old_KeySchedule_ks_server_state_tags tag;
  union {
    FStar_Bytes_bytes case_S_Init;
    struct 
    {
      FStar_Bytes_bytes csr;
      K___Parsers_ProtocolVersion_protocolVersion_CipherSuite_cipherSuite__bool alpha;
      Prims_dtuple2__CommonDH_group__CommonDH_pre_keyshare_ our_share;
    }
    case_S_12_wait_CKE_DH;
    struct 
    {
      FStar_Bytes_bytes csr;
      K___Parsers_ProtocolVersion_protocolVersion_CipherSuite_cipherSuite__bool alpha;
    }
    case_S_12_wait_CKE_RSA;
    struct 
    {
      FStar_Bytes_bytes csr;
      K___Parsers_ProtocolVersion_protocolVersion_CipherSuite_cipherSuite__bool alpha;
      TLSInfo_msId id;
      FStar_Bytes_bytes ms;
    }
    case_S_12_has_MS;
    struct 
    {
      K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg alpha;
      FStar_Bytes_bytes cr;
      FStar_Bytes_bytes sr;
      Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes es;
      Prims_dtuple2__TLSInfo_pre_hsId_FStar_Bytes_bytes hs;
    }
    case_S_13_wait_SH;
    struct 
    {
      K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg alpha;
      Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key _1;
      Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key _2;
      Prims_dtuple2__TLSInfo_pre_asId_FStar_Bytes_bytes _3;
    }
    case_S_13_wait_SF;
    struct 
    {
      K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg alpha;
      Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key _1;
      Prims_dtuple2__TLSInfo_pre_asId_FStar_Bytes_bytes _2;
      FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_expandId_K___FStar_Bytes_bytes_FStar_Bytes_bytes
      _3;
    }
    case_S_13_wait_CF;
    struct 
    {
      K___EverCrypt_aead_alg_Spec_Hash_Definitions_hash_alg alpha;
      FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_expandId_K___FStar_Bytes_bytes_FStar_Bytes_bytes
      _1;
      FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_rmsId_FStar_Bytes_bytes _2;
    }
    case_S_13_postHS;
  }
  val;
}
Old_KeySchedule_ks_server_state;

#define Old_KeySchedule_C 0
#define Old_KeySchedule_S 1

typedef uint8_t Old_KeySchedule_ks_state_tags;

typedef struct Old_KeySchedule_ks_state_s
{
  Old_KeySchedule_ks_state_tags tag;
  union {
    Old_KeySchedule_ks_client_state case_C;
    Old_KeySchedule_ks_server_state case_S;
  }
  val;
}
Old_KeySchedule_ks_state;

typedef struct Old_KeySchedule_ks_s
{
  Old_KeySchedule_ks_state *state;
  bool is_quic;
}
Old_KeySchedule_ks;

typedef struct Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_s
{
  TLSInfo_pre_binderId *fst;
  Old_HMAC_UFCMA_key snd;
}
Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key;

typedef struct
K___Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes_s
{
  Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key fst;
  Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes snd;
}
K___Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes;

typedef struct
Prims_list__K___Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes_s
Prims_list__K___Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes;

typedef struct
Prims_list__K___Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes_s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  K___Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes
  hd;
  Prims_list__K___Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes
  *tl;
}
Prims_list__K___Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_Prims_dtuple2__TLSInfo_pre_esId_FStar_Bytes_bytes;

typedef struct Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_s
Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key;

typedef struct Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key_s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key hd;
  Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key *tl;
}
Prims_list__Prims_dtuple2__TLSInfo_pre_binderId_Old_HMAC_UFCMA_key;

typedef struct FStar_Pervasives_Native_option__Old_KeySchedule_raw_rekey_secrets_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  Old_KeySchedule_raw_rekey_secrets v;
}
FStar_Pervasives_Native_option__Old_KeySchedule_raw_rekey_secrets;

typedef struct Old_Epochs_epoch_s
{
  TLSInfo_id i;
  Negotiation_handshake h;
  StAE_state r;
  StAE_state w;
  K___FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes_FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes
  _4;
}
Old_Epochs_epoch;

TLSInfo_id Old_Epochs_epoch_id(FStar_Bytes_bytes n1, Old_Epochs_epoch e);

StAE_state Old_Epochs_writer_epoch(FStar_Bytes_bytes n1, Old_Epochs_epoch e);

StAE_state Old_Epochs_reader_epoch(FStar_Bytes_bytes n1, Old_Epochs_epoch e);

K___FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes_FStar_Pervasives_Native_option__K___FStar_Bytes_bytes_FStar_Bytes_bytes
Old_Epochs_pn_epoch(FStar_Bytes_bytes n1, Old_Epochs_epoch e);

typedef struct Prims_list__Old_Epochs_epoch_s Prims_list__Old_Epochs_epoch;

typedef struct Prims_list__Old_Epochs_epoch_s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  Old_Epochs_epoch hd;
  Prims_list__Old_Epochs_epoch *tl;
}
Prims_list__Old_Epochs_epoch;

typedef struct
Prims_list__FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes_s
Prims_list__FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes;

typedef struct
Prims_list__FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes_s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes hd;
  Prims_list__FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes
  *tl;
}
Prims_list__FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes;

typedef struct Old_Epochs_epochs_s
{
  Prims_list__Old_Epochs_epoch **es;
  Prims_int *read;
  Prims_int *write;
  Prims_list__FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes
  **exporter;
}
Old_Epochs_epochs;

Prims_int FStar_Seq_Base_length__Old_Epochs_epoch(Prims_list__Old_Epochs_epoch *s);

Prims_list__Old_Epochs_epoch
**Old_Epochs_get_epochs(FStar_Bytes_bytes n1, Old_Epochs_epochs es);

void Old_Epochs_incr_writer(FStar_Bytes_bytes n1, Old_Epochs_epochs es);

Prims_list__Old_Epochs_epoch
*FStar_Monotonic_Seq_i_read__Old_Epochs_epoch___(Prims_list__Old_Epochs_epoch **m);

Old_Epochs_epoch
FStar_Seq_Base_index__Old_Epochs_epoch(Prims_list__Old_Epochs_epoch *s, Prims_int i);

Old_Epochs_epoch
Old_Epochs_get_current_epoch(FStar_Bytes_bytes n1, Old_Epochs_epochs e, TLSConstants_rw rw);

#define Old_Handshake_C_Idle 0
#define Old_Handshake_C_Wait_ServerHello 1
#define Old_Handshake_C_Wait_Finished1 2
#define Old_Handshake_C_Sent_EOED 3
#define Old_Handshake_C_Wait_CCS1 4
#define Old_Handshake_C_Wait_R_Finished1 5
#define Old_Handshake_C_Wait_ServerHelloDone 6
#define Old_Handshake_C_Wait_CCS2 7
#define Old_Handshake_C_Wait_Finished2 8
#define Old_Handshake_C_Complete 9
#define Old_Handshake_S_Idle 10
#define Old_Handshake_S_Sent_ServerHello 11
#define Old_Handshake_S_Wait_EOED 12
#define Old_Handshake_S_Wait_Finished2 13
#define Old_Handshake_S_Wait_CCS1 14
#define Old_Handshake_S_Wait_Finished1 15
#define Old_Handshake_S_Wait_CCS2 16
#define Old_Handshake_S_Wait_CF2 17
#define Old_Handshake_S_Complete 18

typedef uint8_t Old_Handshake_machineState_tags;

typedef struct Old_Handshake_machineState_s
{
  Old_Handshake_machineState_tags tag;
  union {
    struct 
    {
      FStar_Bytes_bytes _0;
      FStar_Pervasives_Native_option__HandshakeMessages_cr _1;
      Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key _2;
    }
    case_C_Sent_EOED;
    FStar_Bytes_bytes case_C_Wait_CCS1;
    FStar_Bytes_bytes case_C_Wait_R_Finished1;
    FStar_Bytes_bytes case_C_Wait_CCS2;
    FStar_Bytes_bytes case_C_Wait_Finished2;
    FStar_Bytes_bytes case_S_Wait_Finished2;
    FStar_Bytes_bytes case_S_Wait_Finished1;
    FStar_Bytes_bytes case_S_Wait_CCS2;
    FStar_Bytes_bytes case_S_Wait_CF2;
  }
  val;
}
Old_Handshake_machineState;

bool Old_Handshake_uu___is_C_Idle(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Wait_ServerHello(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Wait_Finished1(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Sent_EOED(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__C_Sent_EOED__item___0(Old_Handshake_machineState projectee);

FStar_Pervasives_Native_option__HandshakeMessages_cr
Old_Handshake___proj__C_Sent_EOED__item___1(Old_Handshake_machineState projectee);

Prims_dtuple2__TLSInfo_pre_finishedId_Old_HMAC_UFCMA_key
Old_Handshake___proj__C_Sent_EOED__item___2(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Wait_CCS1(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__C_Wait_CCS1__item___0(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Wait_R_Finished1(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__C_Wait_R_Finished1__item___0(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Wait_ServerHelloDone(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Wait_CCS2(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__C_Wait_CCS2__item___0(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Wait_Finished2(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__C_Wait_Finished2__item___0(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_C_Complete(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Idle(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Sent_ServerHello(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Wait_EOED(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Wait_Finished2(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__S_Wait_Finished2__item___0(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Wait_CCS1(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Wait_Finished1(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__S_Wait_Finished1__item___0(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Wait_CCS2(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__S_Wait_CCS2__item___0(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Wait_CF2(Old_Handshake_machineState projectee);

FStar_Bytes_bytes
Old_Handshake___proj__S_Wait_CF2__item___0(Old_Handshake_machineState projectee);

bool Old_Handshake_uu___is_S_Complete(Old_Handshake_machineState projectee);

typedef struct Old_Handshake_hs__s
{
  TLSConstants_role r;
  Negotiation_t nego;
  HandshakeLog_state *log;
  Old_KeySchedule_ks ks;
  Old_Epochs_epochs epochs;
  Old_Handshake_machineState *state;
}
Old_Handshake_hs_;

bool Old_Handshake_uu___is_HS(Old_Handshake_hs_ projectee);

TLSConstants_role Old_Handshake___proj__HS__item__r(Old_Handshake_hs_ projectee);

Negotiation_t Old_Handshake___proj__HS__item__nego(Old_Handshake_hs_ projectee);

HandshakeLog_state *Old_Handshake___proj__HS__item__log(Old_Handshake_hs_ projectee);

Old_KeySchedule_ks Old_Handshake___proj__HS__item__ks(Old_Handshake_hs_ projectee);

Old_Epochs_epochs Old_Handshake___proj__HS__item__epochs(Old_Handshake_hs_ projectee);

Old_Handshake_machineState *Old_Handshake___proj__HS__item__state(Old_Handshake_hs_ projectee);

typedef Old_Handshake_hs_ Old_Handshake_hs;

FStar_Bytes_bytes Old_Handshake_nonce(Old_Handshake_hs_ s);

TLSConstants_role Old_Handshake_role_of(Old_Handshake_hs_ s);

FStar_Bytes_bytes Old_Handshake_random_of(Old_Handshake_hs_ s);

TLSConstants_config Old_Handshake_config_of(Old_Handshake_hs_ s);

Parsers_ProtocolVersion_protocolVersion Old_Handshake_version_of(Old_Handshake_hs_ s);

Negotiation_mode Old_Handshake_get_mode(Old_Handshake_hs_ s);

bool Old_Handshake_is_server_hrr(Old_Handshake_hs_ s);

bool Old_Handshake_is_0rtt_offered(Old_Handshake_hs_ s);

bool Old_Handshake_is_post_handshake(Old_Handshake_hs_ s);

Old_Epochs_epochs Old_Handshake_epochs_of(Old_Handshake_hs_ s);

Prims_list__Old_Epochs_epoch **Old_Handshake_es_of(Old_Handshake_hs_ s);

Prims_int Old_Handshake_i(Old_Handshake_hs_ s, TLSConstants_rw rw);

Prims_int
FStar_Seq_Base_length__FStar_Pervasives_dtuple3_TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes(
  Prims_list__FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes *s
);

Prims_list__FStar_Pervasives_dtuple3__TLSInfo_logInfo_TLSInfo_pre_exportId_FStar_Bytes_bytes
*Old_Handshake_xkeys_of(Old_Handshake_hs_ hs);

#define Old_Handshake_InAck 0
#define Old_Handshake_InQuery 1
#define Old_Handshake_InError 2

typedef uint8_t Old_Handshake_incoming_tags;

typedef struct Old_Handshake_incoming_s
{
  Old_Handshake_incoming_tags tag;
  union {
    struct 
    {
      bool next_keys;
      bool complete;
    }
    case_InAck;
    struct 
    {
      Prims_list__FStar_Bytes_bytes *_0;
      bool _1;
    }
    case_InQuery;
    K___Parsers_Alert_alert_Prims_string case_InError;
  }
  val;
}
Old_Handshake_incoming;

bool Old_Handshake_uu___is_InAck(Old_Handshake_incoming projectee);

bool Old_Handshake___proj__InAck__item__next_keys(Old_Handshake_incoming projectee);

bool Old_Handshake___proj__InAck__item__complete(Old_Handshake_incoming projectee);

bool Old_Handshake_uu___is_InQuery(Old_Handshake_incoming projectee);

Prims_list__FStar_Bytes_bytes
*Old_Handshake___proj__InQuery__item___0(Old_Handshake_incoming projectee);

bool Old_Handshake___proj__InQuery__item___1(Old_Handshake_incoming projectee);

bool Old_Handshake_uu___is_InError(Old_Handshake_incoming projectee);

K___Parsers_Alert_alert_Prims_string
Old_Handshake___proj__InError__item___0(Old_Handshake_incoming projectee);

bool Old_Handshake_in_next_keys(Old_Handshake_incoming r);

bool Old_Handshake_in_complete(Old_Handshake_incoming r);

typedef struct FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string____s
{
  FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_K___FStar_Bytes_bytes_FStar_Bytes_bytes_tags
  tag;
  K___Parsers_Alert_alert_Prims_string _0;
}
FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string___;

typedef struct
FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_FStar_Pervasives_Native_option__CommonDH_keyShareEntry_s
{
  FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_K___FStar_Bytes_bytes_FStar_Bytes_bytes_tags
  tag;
  union {
    K___Parsers_Alert_alert_Prims_string case_Error;
    FStar_Pervasives_Native_option__CommonDH_keyShareEntry case_Correct;
  }
  val;
}
FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_FStar_Pervasives_Native_option__CommonDH_keyShareEntry;

FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_FStar_Pervasives_Native_option__CommonDH_keyShareEntry
TLSError_fatal__FStar_Pervasives_Native_option_CommonDH_keyShareEntry(
  Parsers_AlertDescription_alertDescription a,
  Prims_string s
);

Old_Handshake_hs_ Old_Handshake_create(TLSConstants_config cfg, TLSConstants_role role);

bool Old_Handshake_rehandshake(Old_Handshake_hs_ s, TLSConstants_config c);

bool Old_Handshake_rekey(Old_Handshake_hs_ s, TLSConstants_config c);

bool Old_Handshake_send_ticket(Old_Handshake_hs_ hs, FStar_Bytes_bytes app_data);

FStar_Pervasives_Native_option__Old_KeySchedule_raw_rekey_secrets
Old_Handshake_rekey_secrets(Old_Handshake_hs_ hs);

bool Old_Handshake_request(Old_Handshake_hs_ s, TLSConstants_config c);

void Old_Handshake_invalidateSession(Old_Handshake_hs_ hs);

typedef struct
FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_HandshakeLog_outgoing_s
{
  FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_K___FStar_Bytes_bytes_FStar_Bytes_bytes_tags
  tag;
  union {
    K___Parsers_Alert_alert_Prims_string case_Error;
    HandshakeLog_outgoing case_Correct;
  }
  val;
}
FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_HandshakeLog_outgoing;

FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_HandshakeLog_outgoing
Old_Handshake_next_fragment_bounded(Old_Handshake_hs_ hs, TLSInfo_id i1, Prims_int max1);

FStar_Error_optResult__K___Parsers_Alert_alert_Prims_string_HandshakeLog_outgoing
Old_Handshake_next_fragment(Old_Handshake_hs_ hs, TLSInfo_id i1);

Prims_int Old_Handshake_to_be_written(Old_Handshake_hs_ hs);

Prims_string
TLSConstants_fold_string__FStar_Bytes_bytes(
  Prims_string (*f)(FStar_Bytes_bytes x0),
  Prims_string accum,
  Prims_string sep,
  Prims_list__FStar_Bytes_bytes *al
);

Old_Handshake_incoming
Old_Handshake_recv_fragment(
  Old_Handshake_hs_ hs,
  TLSInfo_id i1,
  K___Prims_int_Prims_int rg1,
  FStar_Bytes_bytes f
);

Old_Handshake_incoming Old_Handshake_recv_ccs(Old_Handshake_hs_ hs);

Old_Handshake_incoming
Old_Handshake_authorize(Old_Handshake_hs_ s, Prims_list__FStar_Bytes_bytes *ch);

#define __Old_Handshake_H_DEFINED
#endif
