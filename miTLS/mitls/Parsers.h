/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: D:\everest\kremlin\_build\src\Kremlin.native -minimal -add-include "kremlib.h" -fnoanonymous-unions -warn-error -9-7-6@4-14-15 -fsopts --debug,yes -verbose -library EverCrypt,EverCrypt.*,Hacl.*,Interop_assumptions,Check_sha_stdcall,Sha_update_bytes_stdcall,Check_aesni_stdcall -drop MonotoneMap -drop MonotoneMapNonDep -drop FStar.Tactics.\* -drop FStar.Tactics -drop Crypto.AEAD.\* -drop Crypto.HKDF -drop Crypto.HMAC -add-include "hacks.h" -add-include "kremlin/internal/compat.h" -bundle LowParse.\*,LowParseWrappers[rename=LowParse] -bundle Format.\* -bundle EverCrypt=EverCrypt,EverCrypt.\* -bundle FStar.\*,LowStar.\*,C,C.\*[rename=Mitls_Kremlib] -bundle Parsers.\* -bundle Spec.\* -bundle Meta.\* -bundle Lib.*[rename=Hacl_Lib] -bundle Hacl.\* -bundle KDF.\*,KDF,Idx,IV,Pkg,Pkg.\*[rename=Pkg] -bundle TLSConstants=TLSConstants,QD.TLS_protocolVersion,List.Helpers -bundle Hashing=Hashing.Spec,Hashing,Hashing.CRF,HMAC,HKDF,HMAC.UFCMA -bundle Old.Handshake=Old.HMAC.UFCMA,Old.Epochs,Old.KeySchedule,Old.Handshake -bundle StatefulLHAE=AEAD_GCM,LHAEPlain,StatefulPlain,StatefulLHAE -bundle StreamAE=StreamPlain,StreamAE -bundle CommonDH=TLS.Curve25519,DHGroup,ECGroup,CommonDH -bundle Content=Content,DataStream -bundle Record=Record,StAE,Transport,StreamDeltas -bundle PMS=PMS,RSAKey,TLSPRF -bundle Crypto.Plain=Buffer.Utils,Crypto.Indexing,Crypto.Plain,Crypto.Symmetric.Bytes -bundle Flags=DebugFlags,Flags,Flag,TLSInfoFlags -bundle Vale.Stdcalls.*,Vale.Interop,Vale.Interop.*,Vale.Wrapper.X64.*[rename=Vale] -bundle Vale.Inline.X64.*[rename=Vale_Inline] -bundle Vale.*[rename=Unused2] -ldopts -L,D:/everest/MLCrypto/openssl,-lcrypto,-lssl extract/Kremlin/FStar_Pervasives_Native.krml extract/Kremlin/FStar_Pervasives.krml extract/Kremlin/FStar_Squash.krml extract/Kremlin/FStar_Classical.krml extract/Kremlin/FStar_Preorder.krml extract/Kremlin/FStar_Calc.krml extract/Kremlin/FStar_Mul.krml extract/Kremlin/FStar_Math_Lib.krml extract/Kremlin/FStar_Math_Lemmas.krml extract/Kremlin/FStar_StrongExcludedMiddle.krml extract/Kremlin/FStar_FunctionalExtensionality.krml extract/Kremlin/FStar_List_Tot_Base.krml extract/Kremlin/FStar_List_Tot_Properties.krml extract/Kremlin/FStar_List_Tot.krml extract/Kremlin/FStar_Seq_Base.krml extract/Kremlin/FStar_Seq_Properties.krml extract/Kremlin/FStar_Seq.krml extract/Kremlin/FStar_BitVector.krml extract/Kremlin/FStar_UInt.krml extract/Kremlin/FStar_UInt32.krml extract/Kremlin/FStar_UInt8.krml extract/Kremlin/FStar_Exn.krml extract/Kremlin/FStar_Set.krml extract/Kremlin/FStar_Monotonic_Witnessed.krml extract/Kremlin/FStar_Ghost.krml extract/Kremlin/FStar_ErasedLogic.krml extract/Kremlin/FStar_PropositionalExtensionality.krml extract/Kremlin/FStar_PredicateExtensionality.krml extract/Kremlin/FStar_TSet.krml extract/Kremlin/FStar_Monotonic_Heap.krml extract/Kremlin/FStar_Heap.krml extract/Kremlin/FStar_ST.krml extract/Kremlin/FStar_All.krml extract/Kremlin/Lib_LoopCombinators.krml extract/Kremlin/FStar_Int.krml extract/Kremlin/FStar_Int64.krml extract/Kremlin/FStar_Int63.krml extract/Kremlin/FStar_Int32.krml extract/Kremlin/FStar_Int16.krml extract/Kremlin/FStar_Int8.krml extract/Kremlin/FStar_UInt64.krml extract/Kremlin/FStar_UInt63.krml extract/Kremlin/FStar_UInt16.krml extract/Kremlin/FStar_Int_Cast.krml extract/Kremlin/FStar_UInt128.krml extract/Kremlin/FStar_Int_Cast_Full.krml extract/Kremlin/FStar_Int128.krml extract/Kremlin/Lib_IntTypes.krml extract/Kremlin/Lib_RawIntTypes.krml extract/Kremlin/Lib_Sequence.krml extract/Kremlin/Lib_ByteSequence.krml extract/Kremlin/Spec_Chacha20.krml extract/Kremlin/Meta_Attribute.krml extract/Kremlin/FStar_Map.krml extract/Kremlin/FStar_Monotonic_HyperHeap.krml extract/Kremlin/FStar_Monotonic_HyperStack.krml extract/Kremlin/FStar_HyperStack.krml extract/Kremlin/FStar_HyperStack_ST.krml extract/Kremlin/FStar_Universe.krml extract/Kremlin/FStar_GSet.krml extract/Kremlin/FStar_ModifiesGen.krml extract/Kremlin/FStar_Range.krml extract/Kremlin/FStar_Reflection_Types.krml extract/Kremlin/FStar_Tactics_Types.krml extract/Kremlin/FStar_Tactics_Result.krml extract/Kremlin/FStar_Tactics_Effect.krml extract/Kremlin/FStar_Reflection_Data.krml extract/Kremlin/FStar_Tactics_Builtins.krml extract/Kremlin/FStar_Reflection_Const.krml extract/Kremlin/FStar_Char.krml extract/Kremlin/FStar_List.krml extract/Kremlin/FStar_String.krml extract/Kremlin/FStar_Order.krml extract/Kremlin/FStar_Reflection_Basic.krml extract/Kremlin/FStar_Reflection_Derived.krml extract/Kremlin/FStar_Reflection_Derived_Lemmas.krml extract/Kremlin/FStar_Reflection.krml extract/Kremlin/FStar_Tactics_SyntaxHelpers.krml extract/Kremlin/FStar_Tactics_Util.krml extract/Kremlin/FStar_Reflection_Formula.krml extract/Kremlin/FStar_Tactics_Derived.krml extract/Kremlin/FStar_Tactics_Logic.krml extract/Kremlin/FStar_Tactics.krml extract/Kremlin/FStar_BigOps.krml extract/Kremlin/LowStar_Monotonic_Buffer.krml extract/Kremlin/LowStar_Buffer.krml extract/Kremlin/LowStar_BufferOps.krml extract/Kremlin/Spec_Loops.krml extract/Kremlin/C_Loops.krml extract/Kremlin/Lib_Loops.krml extract/Kremlin/FStar_Endianness.krml extract/Kremlin/LowStar_Endianness.krml extract/Kremlin/LowStar_ImmutableBuffer.krml extract/Kremlin/Lib_Buffer.krml extract/Kremlin/Lib_ByteBuffer.krml extract/Kremlin/FStar_HyperStack_All.krml extract/Kremlin/Lib_IntVector_Intrinsics.krml extract/Kremlin/Spec_GaloisField.krml extract/Kremlin/Spec_AES.krml extract/Kremlin/Lib_IntVector.krml extract/Kremlin/Hacl_Spec_Chacha20_Vec.krml extract/Kremlin/Hacl_Spec_Chacha20_Lemmas.krml extract/Kremlin/Lib_Sequence_Lemmas.krml extract/Kremlin/Hacl_Spec_Chacha20_Equiv.krml extract/Kremlin/Hacl_Impl_Chacha20_Core32xN.krml extract/Kremlin/Hacl_Impl_Chacha20_Vec.krml extract/Kremlin/Vale_Lib_Seqs_s.krml extract/Kremlin/Vale_Def_Words_s.krml extract/Kremlin/Vale_Def_Words_Four_s.krml extract/Kremlin/Vale_Def_Words_Two_s.krml extract/Kremlin/Vale_Def_Words_Seq_s.krml extract/Kremlin/Vale_Def_Opaque_s.krml extract/Kremlin/Vale_Def_Types_s.krml extract/Kremlin/Vale_X64_Machine_s.krml extract/Kremlin/Vale_Lib_Map16.krml extract/Kremlin/Vale_Def_Prop_s.krml extract/Kremlin/Vale_X64_Flags.krml extract/Kremlin/Vale_X64_CPU_Features_s.krml extract/Kremlin/Vale_Curve25519_Fast_lemmas_internal.krml extract/Kremlin/Vale_Lib_Meta.krml extract/Kremlin/Vale_Def_Words_Two.krml extract/Kremlin/Vale_Lib_Seqs.krml extract/Kremlin/Vale_Def_TypesNative_s.krml extract/Kremlin/Vale_Arch_TypesNative.krml extract/Kremlin/Vale_Def_Words_Seq.krml extract/Kremlin/Vale_Arch_Types.krml extract/Kremlin/Vale_Curve25519_Fast_defs.krml extract/Kremlin/FStar_Algebra_CommMonoid.krml extract/Kremlin/FStar_Tactics_CanonCommSemiring.krml extract/Kremlin/Vale_Curve25519_FastUtil_helpers.krml extract/Kremlin/Vale_Curve25519_FastHybrid_helpers.krml extract/Kremlin/Vale_Curve25519_Fast_lemmas_external.krml extract/Kremlin/Vale_X64_Regs.krml extract/Kremlin/FStar_Float.krml extract/Kremlin/FStar_IO.krml extract/Kremlin/Vale_Def_PossiblyMonad.krml extract/Kremlin/LowStar_BufferView_Down.krml extract/Kremlin/LowStar_BufferView_Up.krml extract/Kremlin/Vale_Interop_Views.krml extract/Kremlin/FStar_Option.krml extract/Kremlin/Vale_Lib_Set.krml extract/Kremlin/Vale_X64_Instruction_s.krml extract/Kremlin/Vale_X64_Bytes_Code_s.krml extract/Kremlin/Vale_AES_AES_s.krml extract/Kremlin/Vale_Math_Poly2_Defs_s.krml extract/Kremlin/Vale_Math_Poly2_s.krml extract/Kremlin/Vale_Math_Poly2_Bits_s.krml extract/Kremlin/Spec_Hash_Definitions.krml extract/Kremlin/Spec_Hash_Lemmas0.krml extract/Kremlin/Spec_Hash_PadFinish.krml extract/Kremlin/Spec_SHA2_Constants.krml extract/Kremlin/Spec_SHA2.krml extract/Kremlin/Vale_X64_CryptoInstructions_s.krml extract/Kremlin/Vale_X64_Instructions_s.krml extract/Kremlin/Vale_Arch_HeapTypes_s.krml extract/Kremlin/Vale_Interop_Types.krml extract/Kremlin/Vale_Arch_MachineHeap_s.krml extract/Kremlin/Vale_Interop_Heap_s.krml extract/Kremlin/LowStar_Modifies.krml extract/Kremlin/LowStar_ModifiesPat.krml extract/Kremlin/LowStar_BufferView.krml extract/Kremlin/Vale_Lib_BufferViewHelpers.krml extract/Kremlin/Vale_Interop.krml extract/Kremlin/Vale_Arch_HeapImpl.krml extract/Kremlin/Vale_Arch_Heap.krml extract/Kremlin/Vale_X64_Machine_Semantics_s.krml extract/Kremlin/Vale_Interop_Base.krml extract/Kremlin/Vale_X64_Memory.krml extract/Kremlin/Vale_Arch_MachineHeap.krml extract/Kremlin/Vale_X64_Stack_i.krml extract/Kremlin/Vale_X64_Stack_Sems.krml extract/Kremlin/Vale_X64_BufferViewStore.krml extract/Kremlin/Vale_X64_Memory_Sems.krml extract/Kremlin/Vale_X64_State.krml extract/Kremlin/Vale_X64_StateLemmas.krml extract/Kremlin/Vale_X64_Lemmas.krml extract/Kremlin/Vale_X64_Print_s.krml extract/Kremlin/Vale_X64_Decls.krml extract/Kremlin/Vale_X64_QuickCode.krml extract/Kremlin/Vale_X64_QuickCodes.krml extract/Kremlin/Vale_X64_Taint_Semantics.krml extract/Kremlin/Vale_X64_InsLemmas.krml extract/Kremlin/Vale_X64_InsBasic.krml extract/Kremlin/Vale_X64_InsMem.krml extract/Kremlin/Vale_X64_InsVector.krml extract/Kremlin/Vale_X64_InsStack.krml extract/Kremlin/Vale_Curve25519_X64_FastHybrid.krml extract/Kremlin/Vale_Bignum_Defs.krml extract/Kremlin/Vale_Bignum_X64.krml extract/Kremlin/Vale_Curve25519_FastSqr_helpers.krml extract/Kremlin/Vale_Curve25519_X64_FastSqr.krml extract/Kremlin/Vale_Curve25519_FastMul_helpers.krml extract/Kremlin/Vale_Curve25519_X64_FastMul.krml extract/Kremlin/Vale_Curve25519_X64_FastWide.krml extract/Kremlin/Vale_Curve25519_X64_FastUtil.krml extract/Kremlin/Vale_X64_MemoryAdapters.krml extract/Kremlin/Vale_Interop_Assumptions.krml extract/Kremlin/Vale_Interop_X64.krml extract/Kremlin/Vale_AsLowStar_ValeSig.krml extract/Kremlin/Vale_AsLowStar_LowStarSig.krml extract/Kremlin/Vale_AsLowStar_MemoryHelpers.krml extract/Kremlin/Vale_AsLowStar_Wrapper.krml extract/Kremlin/Vale_Stdcalls_X64_Fadd.krml extract/Kremlin/Vale_Wrapper_X64_Fadd.krml extract/Kremlin/Spec_SHA1.krml extract/Kremlin/Spec_MD5.krml extract/Kremlin/Spec_Agile_Hash.krml extract/Kremlin/Spec_Hash_Incremental.krml extract/Kremlin/Spec_Hash_Lemmas.krml extract/Kremlin/FStar_Kremlin_Endianness.krml extract/Kremlin/Hacl_Hash_Lemmas.krml extract/Kremlin/Hacl_Hash_Definitions.krml extract/Kremlin/Hacl_Hash_PadFinish.krml extract/Kremlin/Hacl_Hash_MD.krml extract/Kremlin/Spec_SHA2_Lemmas.krml extract/Kremlin/Vale_X64_Stack.krml extract/Kremlin/Vale_SHA_SHA_helpers.krml extract/Kremlin/Vale_X64_InsSha.krml extract/Kremlin/Vale_SHA_X64.krml extract/Kremlin/Vale_Stdcalls_X64_Sha.krml extract/Kremlin/FStar_BV.krml extract/Kremlin/FStar_Reflection_Arith.krml extract/Kremlin/FStar_Tactics_BV.krml extract/Kremlin/Vale_Lib_Bv_s.krml extract/Kremlin/Vale_Math_Bits.krml extract/Kremlin/Vale_Lib_Tactics.krml extract/Kremlin/Vale_Poly1305_Bitvectors.krml extract/Kremlin/Vale_Math_Lemmas_Int.krml extract/Kremlin/FStar_Tactics_Canon.krml extract/Kremlin/Vale_Poly1305_Spec_s.krml extract/Kremlin/Vale_Poly1305_Math.krml extract/Kremlin/Vale_Poly1305_Util.krml extract/Kremlin/Vale_Poly1305_X64.krml extract/Kremlin/Vale_Stdcalls_X64_Poly.krml extract/Kremlin/Vale_Wrapper_X64_Poly.krml extract/Kremlin/Vale_Arch_BufferFriend.krml extract/Kremlin/Vale_SHA_Simplify_Sha.krml extract/Kremlin/Vale_Wrapper_X64_Sha.krml extract/Kremlin/Hacl_Hash_Core_SHA2_Constants.krml extract/Kremlin/Hacl_Hash_Core_SHA2.krml extract/Kremlin/Hacl_Hash_SHA2.krml extract/Kremlin/Hacl_Hash_Core_SHA1.krml extract/Kremlin/Hacl_Hash_SHA1.krml extract/Kremlin/Hacl_Hash_Core_MD5.krml extract/Kremlin/Hacl_Hash_MD5.krml extract/Kremlin/C.krml extract/Kremlin/C_String.krml extract/Kremlin/C_Failure.krml extract/Kremlin/FStar_Int31.krml extract/Kremlin/FStar_UInt31.krml extract/Kremlin/FStar_Integers.krml extract/Kremlin/EverCrypt_StaticConfig.krml extract/Kremlin/EverCrypt_TargetConfig.krml extract/Kremlin/Vale_Lib_Basic.krml extract/Kremlin/Vale_Lib_X64_Cpuid.krml extract/Kremlin/Vale_Lib_X64_Cpuidstdcall.krml extract/Kremlin/Vale_Stdcalls_X64_Cpuid.krml extract/Kremlin/Vale_Wrapper_X64_Cpuid.krml extract/Kremlin/EverCrypt_AutoConfig2.krml extract/Kremlin/EverCrypt_Helpers.krml extract/Kremlin/EverCrypt_Hash.krml extract/Kremlin/Spec_Agile_HMAC.krml extract/Kremlin/Hacl_HMAC.krml extract/Kremlin/EverCrypt_HMAC.krml extract/Kremlin/Declassify.krml extract/Kremlin/FStar_Bytes.krml extract/Kremlin/Hashing_Spec.krml extract/Kremlin/LowParse_Bytes32.krml extract/Kremlin/LowParse_Bytes.krml extract/Kremlin/LowParse_Spec_Base.krml extract/Kremlin/LowParse_SLow_Base.krml extract/Kremlin/LowParse_Spec_Option.krml extract/Kremlin/LowParse_SLow_Option.krml extract/Kremlin/LowParse_Spec_Combinators.krml extract/Kremlin/LowParse_Spec_IfThenElse.krml extract/Kremlin/LowParse_SLow_Combinators.krml extract/Kremlin/LowParse_Spec_List.krml extract/Kremlin/LowParse_SLow_List.krml extract/Kremlin/Spec_Curve25519_Lemmas.krml extract/Kremlin/Spec_Curve25519.krml extract/Kremlin/Hacl_Spec_Curve25519_AddAndDouble.krml extract/Kremlin/Hacl_Impl_Curve25519_Lemmas.krml extract/Kremlin/Hacl_Spec_Curve25519_Field64_Definition.krml extract/Kremlin/Hacl_Spec_Curve25519_Field64_Lemmas.krml extract/Kremlin/Hacl_Spec_Curve25519_Field64_Core.krml extract/Kremlin/Hacl_Spec_Curve25519_Field64.krml extract/Kremlin/Hacl_Spec_Curve25519_Field51_Definition.krml extract/Kremlin/Hacl_Spec_Curve25519_Field51_Lemmas.krml extract/Kremlin/Hacl_Spec_Curve25519_Field51.krml extract/Kremlin/Hacl_Impl_Curve25519_Fields_Core.krml extract/Kremlin/Hacl_Impl_Curve25519_Field64.krml extract/Kremlin/Hacl_Impl_Curve25519_Field51.krml extract/Kremlin/Hacl_Impl_Curve25519_Fields.krml extract/Kremlin/Hacl_Impl_Curve25519_AddAndDouble.krml extract/Kremlin/Spec_Poly1305.krml extract/Kremlin/Hacl_Spec_Poly1305_Vec.krml extract/Kremlin/Hacl_Spec_Poly1305_Field32xN.krml extract/Kremlin/Hacl_Poly1305_Field32xN_Lemmas.krml extract/Kremlin/Hacl_Impl_Poly1305_Lemmas.krml extract/Kremlin/Hacl_Spec_Poly1305_Field32xN_Lemmas.krml extract/Kremlin/Hacl_Impl_Poly1305_Field32xN.krml extract/Kremlin/Hacl_Spec_Poly1305_Lemmas.krml extract/Kremlin/Hacl_Spec_Poly1305_Equiv.krml extract/Kremlin/Hacl_Impl_Poly1305_Field32xN_256.krml extract/Kremlin/Hacl_Impl_Poly1305_Field32xN_128.krml extract/Kremlin/Hacl_Impl_Poly1305_Field32xN_32.krml extract/Kremlin/Hacl_Impl_Poly1305_Fields.krml extract/Kremlin/Hacl_Impl_Poly1305.krml extract/Kremlin/Spec_Chacha20Poly1305.krml extract/Kremlin/Hacl_Impl_Chacha20Poly1305_PolyCore.krml extract/Kremlin/Hacl_Impl_Chacha20Poly1305.krml extract/Kremlin/FStar_List_Pure_Base.krml extract/Kremlin/FStar_List_Pure_Properties.krml extract/Kremlin/FStar_List_Pure.krml extract/Kremlin/Meta_Interface.krml extract/Kremlin/Hacl_Meta_Chacha20Poly1305.krml extract/Kremlin/Hacl_Impl_Chacha20_Core32.krml extract/Kremlin/Hacl_Impl_Chacha20.krml extract/Kremlin/Hacl_Chacha20.krml extract/Kremlin/Hacl_Meta_Poly1305.krml extract/Kremlin/Hacl_Poly1305_32.krml extract/Kremlin/Hacl_Chacha20Poly1305_32.krml extract/Kremlin/FStar_Dyn.krml extract/Kremlin/LowStar_Failure.krml extract/Kremlin/EverCrypt_Vale.krml extract/Kremlin/EverCrypt_Specs.krml extract/Kremlin/EverCrypt_OpenSSL.krml extract/Kremlin/EverCrypt_Hacl.krml extract/Kremlin/EverCrypt_BCrypt.krml extract/Kremlin/EverCrypt_Cipher.krml extract/Kremlin/Hacl_Spec_Curve25519_Finv.krml extract/Kremlin/Hacl_Impl_Curve25519_Finv.krml extract/Kremlin/Hacl_Impl_Curve25519_Generic.krml extract/Kremlin/Hacl_Meta_Curve25519.krml extract/Kremlin/Hacl_Curve25519_51.krml extract/Kremlin/Vale_Stdcalls_X64_Fswap.krml extract/Kremlin/Vale_Wrapper_X64_Fswap.krml extract/Kremlin/Vale_X64_Print_Inline_s.krml extract/Kremlin/Vale_Inline_X64_Fswap_inline.krml extract/Kremlin/Vale_Stdcalls_X64_Fsqr.krml extract/Kremlin/Vale_Wrapper_X64_Fsqr.krml extract/Kremlin/Vale_Inline_X64_Fsqr_inline.krml extract/Kremlin/Vale_Stdcalls_X64_Fmul.krml extract/Kremlin/Vale_Wrapper_X64_Fmul.krml extract/Kremlin/Vale_Inline_X64_Fmul_inline.krml extract/Kremlin/Vale_Stdcalls_X64_Fsub.krml extract/Kremlin/Vale_Wrapper_X64_Fsub.krml extract/Kremlin/Vale_Inline_X64_Fadd_inline.krml extract/Kremlin/Hacl_Impl_Curve25519_Field64_Vale.krml extract/Kremlin/Hacl_Curve25519_64.krml extract/Kremlin/EverCrypt_Curve25519.krml extract/Kremlin/Hacl_Poly1305_128.krml extract/Kremlin/Hacl_Poly1305_256.krml extract/Kremlin/Vale_Poly1305_Equiv.krml extract/Kremlin/Vale_Poly1305_CallingFromLowStar.krml extract/Kremlin/EverCrypt_Poly1305.krml extract/Kremlin/Lib_Memzero.krml extract/Kremlin/Spec_HMAC_DRBG.krml extract/Kremlin/Hacl_HMAC_DRBG.krml extract/Kremlin/Lib_RandomBuffer_System.krml extract/Kremlin/EverCrypt_DRBG.krml extract/Kremlin/Spec_Agile_HKDF.krml extract/Kremlin/Hacl_HKDF.krml extract/Kremlin/EverCrypt_HKDF.krml extract/Kremlin/EverCrypt.krml extract/Kremlin/FStar_Printf.krml extract/Kremlin/FStar_Error.krml extract/Kremlin/FStar_Tcp.krml extract/Kremlin/LowParse_Spec_FLData.krml extract/Kremlin/LowParse_Math.krml extract/Kremlin/LowParse_Slice.krml extract/Kremlin/LowParse_Low_Base.krml extract/Kremlin/LowParse_Low_Combinators.krml extract/Kremlin/LowParse_Low_FLData.krml extract/Kremlin/LowParse_Spec_Seq.krml extract/Kremlin/LowParse_Spec_Int.krml extract/Kremlin/LowParse_Spec_BoundedInt.krml extract/Kremlin/LowParse_Low_Endianness.krml extract/Kremlin/LowParse_BitFields.krml extract/Kremlin/LowParse_Endianness.krml extract/Kremlin/LowParse_Endianness_BitFields.krml extract/Kremlin/LowParse_Low_BoundedInt.krml extract/Kremlin/LowParse_Spec_SeqBytes_Base.krml extract/Kremlin/LowParse_Spec_DER.krml extract/Kremlin/LowParse_Spec_BCVLI.krml extract/Kremlin/LowParse_Spec_AllIntegers.krml extract/Kremlin/LowParse_Spec_VLData.krml extract/Kremlin/LowParse_Low_VLData.krml extract/Kremlin/LowParse_Spec_VLGen.krml extract/Kremlin/LowParse_Low_VLGen.krml extract/Kremlin/LowParse_Low_Int.krml extract/Kremlin/LowParse_Low_DER.krml extract/Kremlin/LowParse_Low_BCVLI.krml extract/Kremlin/LowParse_Low_List.krml extract/Kremlin/LowParse_Spec_Array.krml extract/Kremlin/LowParse_Spec_VCList.krml extract/Kremlin/LowParse_Low_VCList.krml extract/Kremlin/LowParse_Low_IfThenElse.krml extract/Kremlin/LowParse_TacLib.krml extract/Kremlin/LowParse_Spec_Enum.krml extract/Kremlin/LowParse_Spec_Sum.krml extract/Kremlin/LowParse_Low_Enum.krml extract/Kremlin/LowParse_Low_Sum.krml extract/Kremlin/LowParse_Low_Tac_Sum.krml extract/Kremlin/LowParse_Low_Option.krml extract/Kremlin/LowParse_Spec_Bytes.krml extract/Kremlin/LowParse_Low_Bytes.krml extract/Kremlin/LowParse_Low_Array.krml extract/Kremlin/LowParse_Low.krml extract/Kremlin/LowParse_SLow_FLData.krml extract/Kremlin/LowParse_SLow_VLGen.krml extract/Kremlin/LowParse_Spec_Endianness.krml extract/Kremlin/LowParse_Spec_Endianness_Instances.krml extract/Kremlin/LowParse_SLow_Endianness.krml extract/Kremlin/LowParse_SLow_BoundedInt.krml extract/Kremlin/LowParse_SLow_Int.krml extract/Kremlin/LowParse_SLow_DER.krml extract/Kremlin/LowParse_SLow_BCVLI.krml extract/Kremlin/LowParse_SLow_VCList.krml extract/Kremlin/LowParse_SLow_IfThenElse.krml extract/Kremlin/LowParse_SLow_Enum.krml extract/Kremlin/LowParse_SLow_Sum.krml extract/Kremlin/LowParse_SLow_Tac_Enum.krml extract/Kremlin/LowParse_SLow_Tac_Sum.krml extract/Kremlin/LowParse_SLow_VLData.krml extract/Kremlin/LowParse_SLow_Bytes.krml extract/Kremlin/LowParse_SLow_Array.krml extract/Kremlin/LowParse_Spec_Tac_Combinators.krml extract/Kremlin/LowParse_SLow.krml extract/Kremlin/Parsers_AlertDescription.krml extract/Kremlin/Parsers_AlertLevel.krml extract/Kremlin/Parsers_Alert.krml extract/Kremlin/TLSError.krml extract/Kremlin/Parsers_NamedGroup.krml extract/Kremlin/Format_Constants.krml extract/Kremlin/Format_UncompressedPointRepresentation.krml extract/Kremlin/Format_KeyShareEntry.krml extract/Kremlin/Flags.krml extract/Kremlin/Parsers_ECCurveType.krml extract/Kremlin/DebugFlags.krml extract/Kremlin/FStar_DependentMap.krml extract/Kremlin/FStar_Monotonic_DependentMap.krml extract/Kremlin/Mem.krml extract/Kremlin/Random.krml extract/Kremlin/TLS_Curve25519.krml extract/Kremlin/Parse.krml extract/Kremlin/ECGroup.krml extract/Kremlin/DHGroup.krml extract/Kremlin/Parsers_NamedGroupList.krml extract/Kremlin/CommonDH.krml extract/Kremlin/FFICallbacks.krml extract/Kremlin/Parsers_CompressionMethod.krml extract/Kremlin/Parsers_SignatureScheme.krml extract/Kremlin/Parsers_SignatureSchemeList.krml extract/Kremlin/LowParseWrappers.krml extract/Kremlin/Parsers_CipherSuite.krml extract/Kremlin/CipherSuite.krml extract/Kremlin/Parsers_ProtocolVersion.krml extract/Kremlin/TLSConstants.krml extract/Kremlin/HMAC.krml extract/Kremlin/RSAKey.krml extract/Kremlin/PMS.krml extract/Kremlin/List_Helpers.krml extract/Kremlin/PSK.krml extract/Kremlin/Extensions.krml extract/Kremlin/Cert.krml extract/Kremlin/TLSInfoFlags.krml extract/Kremlin/FStar_Date.krml extract/Kremlin/Nonce.krml extract/Kremlin/TLSInfo.krml extract/Kremlin/Crypto_Indexing.krml extract/Kremlin/Flag.krml extract/Kremlin/FStar_Old_Endianness.krml extract/Kremlin/FStar_Buffer.krml extract/Kremlin/C_Compat_Loops.krml extract/Kremlin/Buffer_Utils.krml extract/Kremlin/Crypto_Symmetric_Bytes.krml extract/Kremlin/Crypto_Plain.krml extract/Kremlin/AEADProvider.krml extract/Kremlin/Range.krml extract/Kremlin/DataStream.krml extract/Kremlin/Alert.krml extract/Kremlin/Content.krml extract/Kremlin/StreamPlain.krml extract/Kremlin/Hashing.krml extract/Kremlin/TLSPRF.krml extract/Kremlin/Hashing_CRF.krml extract/Kremlin/HandshakeMessages.krml extract/Kremlin/HandshakeLog.krml extract/Kremlin/Parsers_Boolean.krml extract/Kremlin/Parsers_TicketContents13_custom_data.krml extract/Kremlin/Parsers_TicketContents13_nonce.krml extract/Kremlin/Parsers_TicketContents13_rms.krml extract/Kremlin/Parsers_TicketContents13.krml extract/Kremlin/Parsers_TicketContents12_master_secret.krml extract/Kremlin/Parsers_TicketContents12.krml extract/Kremlin/Parsers_TicketVersion.krml extract/Kremlin/Parsers_TicketContents.krml extract/Kremlin/Parsers_TicketContents12_master_secret_Low.krml extract/Kremlin/Parsers_Ticket_Low.krml extract/Kremlin/Ticket.krml extract/Kremlin/Negotiation.krml extract/Kremlin/FStar_Monotonic_Seq.krml extract/Kremlin/StreamAE.krml extract/Kremlin/StatefulPlain.krml extract/Kremlin/LHAEPlain.krml extract/Kremlin/AEAD_GCM.krml extract/Kremlin/StatefulLHAE.krml extract/Kremlin/StAE.krml extract/Kremlin/Old_HMAC_UFCMA.krml extract/Kremlin/Parsers_HKDF_HkdfLabel_context.krml extract/Kremlin/Parsers_HKDF_HkdfLabel_label.krml extract/Kremlin/Parsers_HKDF_HkdfLabel.krml extract/Kremlin/HKDF.krml extract/Kremlin/Old_KeySchedule.krml extract/Kremlin/Old_Epochs.krml extract/Kremlin/FStar_HyperStack_IO.krml extract/Kremlin/StreamDeltas.krml extract/Kremlin/Old_Handshake.krml extract/Kremlin/Transport.krml extract/Kremlin/BufferBytes.krml extract/Kremlin/Record.krml extract/Kremlin/Connection.krml extract/Kremlin/TLS.krml extract/Kremlin/FFI.krml extract/Kremlin/Pkg.krml extract/Kremlin/Idx.krml extract/Kremlin/Model.krml extract/Kremlin/FStar_Test.krml extract/Kremlin/Pkg_Tree.krml extract/Kremlin/KDF.krml extract/Kremlin/QUIC.krml extract/Kremlin/IV.krml extract/Kremlin/KDF_Rekey.krml -tmpdir extract/Kremlin-Library -skip-compilation
  F* version: 1f9505d5
  KreMLin version: 44acff92
 */
#include "kremlib.h"
#include "hacks.h"
#include "kremlin/internal/compat.h"

#ifndef __Parsers_H
#define __Parsers_H

#include "LowParse.h"
#include "Mitls_Kremlib.h"


#define Parsers_AlertDescription_Close_notify 0
#define Parsers_AlertDescription_Unexpected_message 1
#define Parsers_AlertDescription_Bad_record_mac 2
#define Parsers_AlertDescription_Record_overflow 3
#define Parsers_AlertDescription_Handshake_failure 4
#define Parsers_AlertDescription_Bad_certificate 5
#define Parsers_AlertDescription_Unsupported_certificate 6
#define Parsers_AlertDescription_Certificate_revoked 7
#define Parsers_AlertDescription_Certificate_expired 8
#define Parsers_AlertDescription_Certificate_unknown 9
#define Parsers_AlertDescription_Illegal_parameter 10
#define Parsers_AlertDescription_Unknown_ca 11
#define Parsers_AlertDescription_Access_denied 12
#define Parsers_AlertDescription_Decode_error 13
#define Parsers_AlertDescription_Decrypt_error 14
#define Parsers_AlertDescription_Protocol_version 15
#define Parsers_AlertDescription_Insufficient_security 16
#define Parsers_AlertDescription_Internal_error 17
#define Parsers_AlertDescription_Inappropriate_fallback 18
#define Parsers_AlertDescription_User_canceled 19
#define Parsers_AlertDescription_Missing_extension 20
#define Parsers_AlertDescription_Unsupported_extension 21
#define Parsers_AlertDescription_Unrecognized_name 22
#define Parsers_AlertDescription_Bad_certificate_status_response 23
#define Parsers_AlertDescription_Unknown_psk_identity 24
#define Parsers_AlertDescription_Certificate_required 25
#define Parsers_AlertDescription_No_application_protocol 26

typedef uint8_t Parsers_AlertDescription_alertDescription;

bool
__eq__Parsers_AlertDescription_alertDescription(
  Parsers_AlertDescription_alertDescription y,
  Parsers_AlertDescription_alertDescription x
);

#define Parsers_AlertLevel_Warning 0
#define Parsers_AlertLevel_Fatal 1

typedef uint8_t Parsers_AlertLevel_alertLevel;

bool
__eq__Parsers_AlertLevel_alertLevel(
  Parsers_AlertLevel_alertLevel y,
  Parsers_AlertLevel_alertLevel x
);

typedef struct Parsers_Alert_alert_s
{
  Parsers_AlertLevel_alertLevel level;
  Parsers_AlertDescription_alertDescription description;
}
Parsers_Alert_alert;

typedef struct K___Parsers_Alert_alert_uint32_t_s
{
  Parsers_Alert_alert fst;
  uint32_t snd;
}
K___Parsers_Alert_alert_uint32_t;

typedef struct FStar_Pervasives_Native_option__K___Parsers_Alert_alert_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Parsers_Alert_alert_uint32_t v;
}
FStar_Pervasives_Native_option__K___Parsers_Alert_alert_uint32_t;

FStar_Pervasives_Native_option__K___Parsers_Alert_alert_uint32_t
Parsers_Alert_alert_parser32(FStar_Bytes_bytes input);

FStar_Bytes_bytes Parsers_Alert_alert_serializer32(Parsers_Alert_alert input);

#define Parsers_NamedGroup_Sect233k1 0
#define Parsers_NamedGroup_Sect233r1 1
#define Parsers_NamedGroup_Sect239k1 2
#define Parsers_NamedGroup_Sect283k1 3
#define Parsers_NamedGroup_Sect283r1 4
#define Parsers_NamedGroup_Sect409k1 5
#define Parsers_NamedGroup_Sect409r1 6
#define Parsers_NamedGroup_Sect571k1 7
#define Parsers_NamedGroup_Sect571r1 8
#define Parsers_NamedGroup_Secp224k1 9
#define Parsers_NamedGroup_Secp224r1 10
#define Parsers_NamedGroup_Secp256k1 11
#define Parsers_NamedGroup_Secp256r1 12
#define Parsers_NamedGroup_Secp384r1 13
#define Parsers_NamedGroup_Secp521r1 14
#define Parsers_NamedGroup_X25519 15
#define Parsers_NamedGroup_X448 16
#define Parsers_NamedGroup_Ffdhe2048 17
#define Parsers_NamedGroup_Ffdhe3072 18
#define Parsers_NamedGroup_Ffdhe4096 19
#define Parsers_NamedGroup_Ffdhe6144 20
#define Parsers_NamedGroup_Ffdhe8192 21
#define Parsers_NamedGroup_Unknown_namedGroup 22

typedef uint8_t Parsers_NamedGroup_namedGroup_tags;

typedef struct Parsers_NamedGroup_namedGroup_s
{
  Parsers_NamedGroup_namedGroup_tags tag;
  uint16_t _0;
}
Parsers_NamedGroup_namedGroup;

Prims_string Parsers_NamedGroup_string_of_namedGroup(Parsers_NamedGroup_namedGroup uu___0_346);

typedef struct K___Parsers_NamedGroup_namedGroup_uint32_t_s
{
  Parsers_NamedGroup_namedGroup fst;
  uint32_t snd;
}
K___Parsers_NamedGroup_namedGroup_uint32_t;

typedef struct FStar_Pervasives_Native_option__K___Parsers_NamedGroup_namedGroup_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Parsers_NamedGroup_namedGroup_uint32_t v;
}
FStar_Pervasives_Native_option__K___Parsers_NamedGroup_namedGroup_uint32_t;

FStar_Pervasives_Native_option__K___Parsers_NamedGroup_namedGroup_uint32_t
Parsers_NamedGroup_namedGroup_parser32(FStar_Bytes_bytes input);

bool
__eq__Parsers_NamedGroup_namedGroup(
  Parsers_NamedGroup_namedGroup y,
  Parsers_NamedGroup_namedGroup x
);

FStar_Bytes_bytes
Parsers_NamedGroup_namedGroup_serializer32(Parsers_NamedGroup_namedGroup input);

#define Parsers_ECCurveType_Explicit_prime 0
#define Parsers_ECCurveType_Explicit_char2 1
#define Parsers_ECCurveType_Named_curve 2

typedef uint8_t Parsers_ECCurveType_eCCurveType;

typedef struct K___Parsers_ECCurveType_eCCurveType_uint32_t_s
{
  Parsers_ECCurveType_eCCurveType fst;
  uint32_t snd;
}
K___Parsers_ECCurveType_eCCurveType_uint32_t;

typedef struct FStar_Pervasives_Native_option__K___Parsers_ECCurveType_eCCurveType_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Parsers_ECCurveType_eCCurveType_uint32_t v;
}
FStar_Pervasives_Native_option__K___Parsers_ECCurveType_eCCurveType_uint32_t;

FStar_Pervasives_Native_option__K___Parsers_ECCurveType_eCCurveType_uint32_t
Parsers_ECCurveType_eCCurveType_parser32(FStar_Bytes_bytes input);

typedef struct Prims_list__Parsers_NamedGroup_namedGroup_s
Prims_list__Parsers_NamedGroup_namedGroup;

#define Prims_Nil 0
#define Prims_Cons 1

typedef uint8_t Prims_list__Parsers_NamedGroup_namedGroup_tags;

typedef struct Prims_list__Parsers_NamedGroup_namedGroup_s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  Parsers_NamedGroup_namedGroup hd;
  Prims_list__Parsers_NamedGroup_namedGroup *tl;
}
Prims_list__Parsers_NamedGroup_namedGroup;

typedef struct K___Prims_list__Parsers_NamedGroup_namedGroup_uint32_t_s
{
  Prims_list__Parsers_NamedGroup_namedGroup *fst;
  uint32_t snd;
}
K___Prims_list__Parsers_NamedGroup_namedGroup_uint32_t;

typedef struct
FStar_Pervasives_Native_option__K___Prims_list__Parsers_NamedGroup_namedGroup_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Prims_list__Parsers_NamedGroup_namedGroup_uint32_t v;
}
FStar_Pervasives_Native_option__K___Prims_list__Parsers_NamedGroup_namedGroup_uint32_t;

typedef struct FStar_Pervasives_Native_option__Prims_list__Parsers_NamedGroup_namedGroup_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  Prims_list__Parsers_NamedGroup_namedGroup *v;
}
FStar_Pervasives_Native_option__Prims_list__Parsers_NamedGroup_namedGroup;

FStar_Pervasives_Native_option__K___Prims_list__Parsers_NamedGroup_namedGroup_uint32_t
Parsers_NamedGroupList_namedGroupList_parser32(FStar_Bytes_bytes input);

FStar_Bytes_bytes
Parsers_NamedGroupList_namedGroupList_serializer32(
  Prims_list__Parsers_NamedGroup_namedGroup *input
);

#define Parsers_CompressionMethod_NullCompression 0
#define Parsers_CompressionMethod_Unknown_compressionMethod 1

typedef uint8_t Parsers_CompressionMethod_compressionMethod_tags;

typedef struct Parsers_CompressionMethod_compressionMethod_s
{
  Parsers_CompressionMethod_compressionMethod_tags tag;
  uint8_t _0;
}
Parsers_CompressionMethod_compressionMethod;

typedef struct K___Parsers_CompressionMethod_compressionMethod_uint32_t_s
{
  Parsers_CompressionMethod_compressionMethod fst;
  uint32_t snd;
}
K___Parsers_CompressionMethod_compressionMethod_uint32_t;

typedef struct
FStar_Pervasives_Native_option__K___Parsers_CompressionMethod_compressionMethod_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Parsers_CompressionMethod_compressionMethod_uint32_t v;
}
FStar_Pervasives_Native_option__K___Parsers_CompressionMethod_compressionMethod_uint32_t;

FStar_Pervasives_Native_option__K___Parsers_CompressionMethod_compressionMethod_uint32_t
Parsers_CompressionMethod_compressionMethod_parser32(FStar_Bytes_bytes input);

FStar_Bytes_bytes
Parsers_CompressionMethod_compressionMethod_serializer32(
  Parsers_CompressionMethod_compressionMethod input
);

#define Parsers_SignatureScheme_Rsa_pkcs1_md5 0
#define Parsers_SignatureScheme_Rsa_pkcs1_sha1 1
#define Parsers_SignatureScheme_Ecdsa_md5 2
#define Parsers_SignatureScheme_Ecdsa_sha1 3
#define Parsers_SignatureScheme_Rsa_pkcs1_sha256 4
#define Parsers_SignatureScheme_Rsa_pkcs1_sha384 5
#define Parsers_SignatureScheme_Rsa_pkcs1_sha512 6
#define Parsers_SignatureScheme_Ecdsa_secp256r1_sha256 7
#define Parsers_SignatureScheme_Ecdsa_secp384r1_sha384 8
#define Parsers_SignatureScheme_Ecdsa_secp521r1_sha512 9
#define Parsers_SignatureScheme_Rsa_pss_rsae_sha256 10
#define Parsers_SignatureScheme_Rsa_pss_rsae_sha384 11
#define Parsers_SignatureScheme_Rsa_pss_rsae_sha512 12
#define Parsers_SignatureScheme_Ed25519 13
#define Parsers_SignatureScheme_Ed448 14
#define Parsers_SignatureScheme_Rsa_pss_pss_sha256 15
#define Parsers_SignatureScheme_Rsa_pss_pss_sha384 16
#define Parsers_SignatureScheme_Rsa_pss_pss_sha512 17
#define Parsers_SignatureScheme_Unknown_signatureScheme 18

typedef uint8_t Parsers_SignatureScheme_signatureScheme_tags;

typedef struct Parsers_SignatureScheme_signatureScheme_s
{
  Parsers_SignatureScheme_signatureScheme_tags tag;
  uint16_t _0;
}
Parsers_SignatureScheme_signatureScheme;

Prims_string
Parsers_SignatureScheme_string_of_signatureScheme(
  Parsers_SignatureScheme_signatureScheme uu___0_294
);

typedef struct K___Parsers_SignatureScheme_signatureScheme_uint32_t_s
{
  Parsers_SignatureScheme_signatureScheme fst;
  uint32_t snd;
}
K___Parsers_SignatureScheme_signatureScheme_uint32_t;

typedef struct
FStar_Pervasives_Native_option__K___Parsers_SignatureScheme_signatureScheme_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Parsers_SignatureScheme_signatureScheme_uint32_t v;
}
FStar_Pervasives_Native_option__K___Parsers_SignatureScheme_signatureScheme_uint32_t;

FStar_Pervasives_Native_option__K___Parsers_SignatureScheme_signatureScheme_uint32_t
Parsers_SignatureScheme_signatureScheme_parser32(FStar_Bytes_bytes input);

bool
__eq__Parsers_SignatureScheme_signatureScheme(
  Parsers_SignatureScheme_signatureScheme y,
  Parsers_SignatureScheme_signatureScheme x
);

FStar_Bytes_bytes
Parsers_SignatureScheme_signatureScheme_serializer32(
  Parsers_SignatureScheme_signatureScheme input
);

typedef struct Prims_list__Parsers_SignatureScheme_signatureScheme_s
Prims_list__Parsers_SignatureScheme_signatureScheme;

typedef struct Prims_list__Parsers_SignatureScheme_signatureScheme_s
{
  Prims_list__Parsers_NamedGroup_namedGroup_tags tag;
  Parsers_SignatureScheme_signatureScheme hd;
  Prims_list__Parsers_SignatureScheme_signatureScheme *tl;
}
Prims_list__Parsers_SignatureScheme_signatureScheme;

typedef struct K___Prims_list__Parsers_SignatureScheme_signatureScheme_uint32_t_s
{
  Prims_list__Parsers_SignatureScheme_signatureScheme *fst;
  uint32_t snd;
}
K___Prims_list__Parsers_SignatureScheme_signatureScheme_uint32_t;

typedef struct
FStar_Pervasives_Native_option__K___Prims_list__Parsers_SignatureScheme_signatureScheme_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Prims_list__Parsers_SignatureScheme_signatureScheme_uint32_t v;
}
FStar_Pervasives_Native_option__K___Prims_list__Parsers_SignatureScheme_signatureScheme_uint32_t;

typedef struct
FStar_Pervasives_Native_option__Prims_list__Parsers_SignatureScheme_signatureScheme_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  Prims_list__Parsers_SignatureScheme_signatureScheme *v;
}
FStar_Pervasives_Native_option__Prims_list__Parsers_SignatureScheme_signatureScheme;

FStar_Pervasives_Native_option__K___Prims_list__Parsers_SignatureScheme_signatureScheme_uint32_t
Parsers_SignatureSchemeList_signatureSchemeList_parser32(FStar_Bytes_bytes input);

FStar_Bytes_bytes
Parsers_SignatureSchemeList_signatureSchemeList_serializer32(
  Prims_list__Parsers_SignatureScheme_signatureScheme *input
);

#define Parsers_CipherSuite_TLS_NULL_WITH_NULL_NULL 0
#define Parsers_CipherSuite_TLS_RSA_WITH_NULL_MD5 1
#define Parsers_CipherSuite_TLS_RSA_WITH_NULL_SHA 2
#define Parsers_CipherSuite_TLS_RSA_WITH_RC4_128_MD5 3
#define Parsers_CipherSuite_TLS_RSA_WITH_RC4_128_SHA 4
#define Parsers_CipherSuite_TLS_RSA_WITH_3DES_EDE_CBC_SHA 5
#define Parsers_CipherSuite_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA 6
#define Parsers_CipherSuite_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA 7
#define Parsers_CipherSuite_TLS_DH_anon_WITH_RC4_128_MD5 8
#define Parsers_CipherSuite_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA 9
#define Parsers_CipherSuite_TLS_RSA_WITH_AES_128_CBC_SHA 10
#define Parsers_CipherSuite_TLS_DHE_DSS_WITH_AES_128_CBC_SHA 11
#define Parsers_CipherSuite_TLS_DHE_RSA_WITH_AES_128_CBC_SHA 12
#define Parsers_CipherSuite_TLS_DH_anon_WITH_AES_128_CBC_SHA 13
#define Parsers_CipherSuite_TLS_RSA_WITH_AES_256_CBC_SHA 14
#define Parsers_CipherSuite_TLS_DHE_DSS_WITH_AES_256_CBC_SHA 15
#define Parsers_CipherSuite_TLS_DHE_RSA_WITH_AES_256_CBC_SHA 16
#define Parsers_CipherSuite_TLS_DH_anon_WITH_AES_256_CBC_SHA 17
#define Parsers_CipherSuite_TLS_RSA_WITH_NULL_SHA256 18
#define Parsers_CipherSuite_TLS_RSA_WITH_AES_128_CBC_SHA256 19
#define Parsers_CipherSuite_TLS_RSA_WITH_AES_256_CBC_SHA256 20
#define Parsers_CipherSuite_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 21
#define Parsers_CipherSuite_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 22
#define Parsers_CipherSuite_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 23
#define Parsers_CipherSuite_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 24
#define Parsers_CipherSuite_TLS_DH_anon_WITH_AES_128_CBC_SHA256 25
#define Parsers_CipherSuite_TLS_DH_anon_WITH_AES_256_CBC_SHA256 26
#define Parsers_CipherSuite_TLS_RSA_WITH_AES_128_GCM_SHA256 27
#define Parsers_CipherSuite_TLS_RSA_WITH_AES_256_GCM_SHA384 28
#define Parsers_CipherSuite_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 29
#define Parsers_CipherSuite_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 30
#define Parsers_CipherSuite_TLS_DH_RSA_WITH_AES_128_GCM_SHA256 31
#define Parsers_CipherSuite_TLS_DH_RSA_WITH_AES_256_GCM_SHA384 32
#define Parsers_CipherSuite_TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 33
#define Parsers_CipherSuite_TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 34
#define Parsers_CipherSuite_TLS_DH_DSS_WITH_AES_128_GCM_SHA256 35
#define Parsers_CipherSuite_TLS_DH_DSS_WITH_AES_256_GCM_SHA384 36
#define Parsers_CipherSuite_TLS_DH_anon_WITH_AES_128_GCM_SHA256 37
#define Parsers_CipherSuite_TLS_DH_anon_WITH_AES_256_GCM_SHA384 38
#define Parsers_CipherSuite_TLS_AES_128_GCM_SHA256 39
#define Parsers_CipherSuite_TLS_AES_256_GCM_SHA384 40
#define Parsers_CipherSuite_TLS_CHACHA20_POLY1305_SHA256 41
#define Parsers_CipherSuite_TLS_AES_128_CCM_SHA256 42
#define Parsers_CipherSuite_TLS_AES_128_CCM_8_SHA256 43
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_RC4_128_SHA 44
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA 45
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA 46
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA 47
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 48
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 49
#define Parsers_CipherSuite_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 50
#define Parsers_CipherSuite_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 51
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 52
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 53
#define Parsers_CipherSuite_TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 54
#define Parsers_CipherSuite_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 55
#define Parsers_CipherSuite_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 56
#define Parsers_CipherSuite_TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 57
#define Parsers_CipherSuite_TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 58
#define Parsers_CipherSuite_TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 59
#define Parsers_CipherSuite_Unknown_cipherSuite 60

typedef uint8_t Parsers_CipherSuite_cipherSuite_tags;

typedef struct Parsers_CipherSuite_cipherSuite_s
{
  Parsers_CipherSuite_cipherSuite_tags tag;
  uint16_t _0;
}
Parsers_CipherSuite_cipherSuite;

Prims_string
Parsers_CipherSuite_string_of_cipherSuite(Parsers_CipherSuite_cipherSuite uu___0_840);

typedef struct K___Parsers_CipherSuite_cipherSuite_uint32_t_s
{
  Parsers_CipherSuite_cipherSuite fst;
  uint32_t snd;
}
K___Parsers_CipherSuite_cipherSuite_uint32_t;

typedef struct FStar_Pervasives_Native_option__K___Parsers_CipherSuite_cipherSuite_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Parsers_CipherSuite_cipherSuite_uint32_t v;
}
FStar_Pervasives_Native_option__K___Parsers_CipherSuite_cipherSuite_uint32_t;

FStar_Pervasives_Native_option__K___Parsers_CipherSuite_cipherSuite_uint32_t
Parsers_CipherSuite_cipherSuite_parser32(FStar_Bytes_bytes input);

bool
__eq__Parsers_CipherSuite_cipherSuite(
  Parsers_CipherSuite_cipherSuite y,
  Parsers_CipherSuite_cipherSuite x
);

FStar_Bytes_bytes
Parsers_CipherSuite_cipherSuite_serializer32(Parsers_CipherSuite_cipherSuite input);

uint32_t
Parsers_CipherSuite_cipherSuite_writer(
  Parsers_CipherSuite_cipherSuite x,
  LowParse_Slice_slice input,
  uint32_t pos
);

#define Parsers_ProtocolVersion_SSL_3p0 0
#define Parsers_ProtocolVersion_TLS_1p0 1
#define Parsers_ProtocolVersion_TLS_1p1 2
#define Parsers_ProtocolVersion_TLS_1p2 3
#define Parsers_ProtocolVersion_TLS_1p3 4
#define Parsers_ProtocolVersion_Unknown_protocolVersion 5

typedef uint8_t Parsers_ProtocolVersion_protocolVersion_tags;

typedef struct Parsers_ProtocolVersion_protocolVersion_s
{
  Parsers_ProtocolVersion_protocolVersion_tags tag;
  uint16_t _0;
}
Parsers_ProtocolVersion_protocolVersion;

bool
Parsers_ProtocolVersion_uu___is_SSL_3p0(Parsers_ProtocolVersion_protocolVersion projectee);

bool
Parsers_ProtocolVersion_uu___is_TLS_1p3(Parsers_ProtocolVersion_protocolVersion projectee);

bool
Parsers_ProtocolVersion_uu___is_Unknown_protocolVersion(
  Parsers_ProtocolVersion_protocolVersion projectee
);

Prims_string
Parsers_ProtocolVersion_string_of_protocolVersion(
  Parsers_ProtocolVersion_protocolVersion uu___0_125
);

typedef struct K___Parsers_ProtocolVersion_protocolVersion_uint32_t_s
{
  Parsers_ProtocolVersion_protocolVersion fst;
  uint32_t snd;
}
K___Parsers_ProtocolVersion_protocolVersion_uint32_t;

typedef struct
FStar_Pervasives_Native_option__K___Parsers_ProtocolVersion_protocolVersion_uint32_t_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  K___Parsers_ProtocolVersion_protocolVersion_uint32_t v;
}
FStar_Pervasives_Native_option__K___Parsers_ProtocolVersion_protocolVersion_uint32_t;

FStar_Pervasives_Native_option__K___Parsers_ProtocolVersion_protocolVersion_uint32_t
Parsers_ProtocolVersion_protocolVersion_parser32(FStar_Bytes_bytes input);

bool
__eq__Parsers_ProtocolVersion_protocolVersion(
  Parsers_ProtocolVersion_protocolVersion y,
  Parsers_ProtocolVersion_protocolVersion x
);

FStar_Bytes_bytes
Parsers_ProtocolVersion_protocolVersion_serializer32(
  Parsers_ProtocolVersion_protocolVersion input
);

uint32_t
Parsers_ProtocolVersion_protocolVersion_writer(
  Parsers_ProtocolVersion_protocolVersion x,
  LowParse_Slice_slice input,
  uint32_t pos
);

#define Parsers_Boolean_B_false 0
#define Parsers_Boolean_B_true 1

typedef uint8_t Parsers_Boolean_boolean;

uint32_t
Parsers_Boolean_boolean_writer(
  Parsers_Boolean_boolean x,
  LowParse_Slice_slice input,
  uint32_t pos
);

uint32_t
Parsers_TicketContents12_master_secret_Low_write_ticketContents12_master_secret(
  FStar_Bytes_bytes x,
  LowParse_Slice_slice input,
  uint32_t pos
);

typedef struct Parsers_HKDF_HkdfLabel_hkdfLabel_s
{
  uint16_t length;
  FStar_Bytes_bytes label;
  FStar_Bytes_bytes context;
}
Parsers_HKDF_HkdfLabel_hkdfLabel;

typedef struct K___uint16_t_FStar_Bytes_bytes_s
{
  uint16_t fst;
  FStar_Bytes_bytes snd;
}
K___uint16_t_FStar_Bytes_bytes;

FStar_Bytes_bytes
Parsers_HKDF_HkdfLabel_hkdfLabel_serializer32(Parsers_HKDF_HkdfLabel_hkdfLabel input);

#define __Parsers_H_DEFINED
#endif
